<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="FileStorage" type="System.Configuration.NameValueSectionHandler" />
    <section name="PassContainer" type="System.Configuration.NameValueSectionHandler" />
    <section name="CertificateStorage" type="System.Configuration.NameValueSectionHandler" />
  </configSections>
  
  <connectionStrings>
    <add name="LocalConnection" connectionString="Data Source=localhost;Initial Catalog=MobileWallet;Integrated Security=SSPI" providerName="System.Data.SqlClient" />
  </connectionStrings>
  
  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container name="FileStorage">
      <register type="FileStorage.Core.IFileStorageConfig, FileStorage.Core" mapTo="FileStorage.BL.FileStorageConfig, FileStorage.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="FileStorage.BL.FileStorageConfig, FileStorage.BL">
        <lifetime type="singleton" />
      </register>
      
      <register type="FileStorage.Repository.Core.IFileStorageUnitOfWork, FileStorage.Repository.Core" mapTo="FileStorage.Repository.EF.FileStorageUnitOfWork, FileStorage.Repository.EF" />
      <register type="FileStorage.Core.IFileStorageService, FileStorage.Core" mapTo="FileStorage.BL.FileStorageService, FileStorage.BL" />
    </container>
    
    <container name="CertificateStorage">
      <register type="CertificateStorage.Core.ICertificateStorageConfig, CertificateStorage.Core" mapTo="CertificateStorage.BL.CertificateStorageConfig, CertificateStorage.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="CertificateStorage.BL.CertificateStorageConfig, CertificateStorage.BL">
        <lifetime type="singleton" />
      </register>

      <register type="CertificateStorage.Repository.Core.ICertificateStorageUnitOfWork, CertificateStorage.Repository.Core" mapTo="CertificateStorage.Repository.EF.CertificateStorageUnitOfWork, CertificateStorage.Repository.EF" />
      <register type="CertificateStorage.Core.ICertificateStorageService, CertificateStorage.Core" mapTo="CertificateStorage.BL.CertificateStorageService, CertificateStorage.BL" />
    </container>

    <container name="PassContainer">
      <register type="Pass.Container.Core.IPassContainerConfig, Pass.Container.Core" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Pass.Container.Core.IPassTemplateConfig, Pass.Container.Core" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>

      <register type="Pass.Container.Repository.Core.IPassContainerUnitOfWork, Pass.Container.Repository.Core" mapTo="Pass.Container.Repository.EF.PassContainerUnitOfWork, Pass.Container.Repository.EF" />
      <register type="Pass.Container.Core.IPassTemplateService, Pass.Container.Core" mapTo="Pass.Container.BL.PassTemplateService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassService, Pass.Container.Core" mapTo="Pass.Container.BL.PassService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IApplePassProcessingService, Pass.Container.Core" mapTo="Pass.Container.BL.ApplePassProcessingService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassCertificateService, Pass.Container.Core" mapTo="Pass.Container.BL.PassCertificateService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassTemplateStorageService, Pass.Container.Core" mapTo="Pass.Container.BL.PassTemplateStorageService, Pass.Container.BL" />
    </container>
  </unity>
  
  <FileStorage>
    <add key="StorageDeep" value="2" />
    <add key="MaxItemsNumber" value="50" />
    <add key="StoragePath" value="D:\Data\MW\FS\Test" />
    <add key="ConnectionStringName" value="LocalConnection" />
  </FileStorage>
  
  <PassContainer>
    <add key="PassTemplateFolderName" value="PassTemplate" />
    <add key="ApplePassTemplateWebServerUrl" value="http://kovganko-pc/Pass.Processing.Web/" />
    <add key="ConnectionStringName" value="LocalConnection" />
    <add key="SecurityKey" value="1234567812345678" />
    <add key="PassTemplateWorkingFolder" value="PassTemplateWorkingFolder" />
    <add key="PassWorkingFolder" value="PassWorkingFolder" />

    <!--Apple pass generator-->
    <add key="AppleWWDRCAPath" value="TestCertificates\Apple\AppleWWDRCA.cer" />
  </PassContainer>
  
  <CertificateStorage>
    <add key="ConnectionStringName" value="LocalConnection" />
    <add key="SecurityKey" value="1234567890987654" />
  </CertificateStorage>
  
</configuration>