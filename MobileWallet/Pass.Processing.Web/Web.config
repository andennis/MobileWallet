<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
    <section name="FileStorage" type="System.Configuration.NameValueSectionHandler" />
    <section name="PassContainer" type="System.Configuration.NameValueSectionHandler" />
    <section name="CertificateStorage" type="System.Configuration.NameValueSectionHandler" />
  </configSections>

  <appSettings>
    <add key="webpages:Version" value="2.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="PreserveLoginUrl" value="true" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>
  
  <system.web>
    <httpRuntime relaxedUrlToFileSystemMapping="true" targetFramework="4.5" />
    <httpHandlers>
        <add path="*" type="System.Web.Handlers.TransferRequestHandler" verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" />
      </httpHandlers>
    <compilation debug="true" targetFramework="4.5" />
    <pages>
      <namespaces>
        <add namespace="System.Web.Helpers" />
        <add namespace="System.Web.Mvc" />
        <add namespace="System.Web.Mvc.Ajax" />
        <add namespace="System.Web.Mvc.Html" />
        <add namespace="System.Web.Routing" />
        <add namespace="System.Web.WebPages" />
      </namespaces>
    </pages>
  </system.web>
  
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false" />
    <modules runAllManagedModulesForAllRequests="true" />
    <handlers>
      <add name="AllRequest" path="*" verb="*" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" resourceType="Unspecified" requireAccess="None" preCondition="classicMode,runtimeVersionv4.0,bitness32" />
   </handlers>
  </system.webServer>
  
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.0.0" newVersion="5.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Microsoft.Practices.Unity" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.5.0.0" newVersion="3.5.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Http" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-5.1.0.0" newVersion="5.1.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container name="FileStorage">
      <register type="FileStorage.Core.IFileStorageConfig, FileStorage.Core" mapTo="FileStorage.BL.FileStorageConfig, FileStorage.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="FileStorage.BL.FileStorageConfig, FileStorage.BL">
        <lifetime type="singleton" />
      </register>

      <register type="FileStorage.Repository.Core.IFileStorageUnitOfWork, FileStorage.Repository.Core" mapTo="FileStorage.Repository.EF.FileStorageUnitOfWork, FileStorage.Repository.EF" />
      <register type="FileStorage.Core.IFileStorageService, FileStorage.Core" mapTo="FileStorage.BL.FileStorageService, FileStorage.BL" />
    </container>

    <container name="CertificateStorage">
      <register type="CertificateStorage.Core.ICertificateStorageConfig, CertificateStorage.Core" mapTo="CertificateStorage.BL.CertificateStorageConfig, CertificateStorage.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="CertificateStorage.BL.CertificateStorageConfig, CertificateStorage.BL">
        <lifetime type="singleton" />
      </register>

      <register type="CertificateStorage.Repository.Core.ICertificateStorageUnitOfWork, CertificateStorage.Repository.Core" mapTo="CertificateStorage.Repository.EF.CertificateStorageUnitOfWork, CertificateStorage.Repository.EF" />
      <register type="CertificateStorage.Core.ICertificateStorageService, CertificateStorage.Core" mapTo="CertificateStorage.BL.CertificateStorageService, CertificateStorage.BL" />
    </container>

    <container name="PassContainer">
      <register type="Pass.Container.Core.IPassContainerConfig, Pass.Container.Core" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Pass.Container.Core.IPassTemplateConfig, Pass.Container.Core" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>

      <register type="Pass.Container.Repository.Core.IPassContainerUnitOfWork, Pass.Container.Repository.Core" mapTo="Pass.Container.Repository.EF.PassContainerUnitOfWork, Pass.Container.Repository.EF" />
      <register type="Pass.Container.Core.IPassTemplateService, Pass.Container.Core" mapTo="Pass.Container.BL.PassTemplateService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassService, Pass.Container.Core" mapTo="Pass.Container.BL.PassService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassProcessingAppleService, Pass.Container.Core, Version=1.0.0.0, Culture=neutral" mapTo="Pass.Container.BL.PassProcessing.PassProcessingAppleService, Pass.Container.BL, Version=1.0.0.0, Culture=neutral" />
      <register type="Pass.Container.Core.IPassCertificateService, Pass.Container.Core" mapTo="Pass.Container.BL.PassCertificateService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassTemplateStorageService, Pass.Container.Core" mapTo="Pass.Container.BL.PassTemplateStorageService, Pass.Container.BL" />
    </container>
  </unity>

  <connectionStrings>
    <add name="LocalConnection" connectionString="Data Source=localhost;Initial Catalog=MobileWallet;User Id=sa; Password=sa1" providerName="System.Data.SqlClient" />
    <add name="SmarterAspConnection" connectionString="Data Source=SQL5008.Smarterasp.net;Initial Catalog=DB_9AF60B_MobileWallet;User Id=DB_9AF60B_MobileWallet_admin;Password=12345678" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <FileStorage>
    <add key="StorageDeep" value="2" />
    <add key="MaxItemsNumber" value="50" />
    <add key="StoragePath" value="D:\Data\MW\FS\Work" />
    <add key="ConnectionStringName" value="LocalConnection" />
  </FileStorage>

  <PassContainer>
    <add key="PassWorkingFolder" value="D:\Data\MW\Temp\PassWorkingFolder" />
    <add key="ConnectionStringName" value="LocalConnection" />

    <!--Apple pass generator-->
    <add key="AppleWebServerUrl" value="https://d-andreev/Pass.Processing.Web/" />
    <add key="AppleWWDRCAPath" value="D:\Data\MW\Cert\Apple\AppleWWDRCA.cer" />
  </PassContainer>

  <CertificateStorage>
    <add key="ConnectionStringName" value="LocalConnection" />
    <add key="SecurityKey" value="1234567890987654" />
  </CertificateStorage>
  

</configuration>