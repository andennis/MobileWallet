<?xml version="1.0" encoding="utf-8"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=301880
  -->
<configuration>
  <configSections>
    <section name="unity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />

    <section name="FileStorage" type="System.Configuration.NameValueSectionHandler" />
    <section name="CertificateStorage" type="System.Configuration.NameValueSectionHandler" />
    <section name="PassContainer" type="System.Configuration.NameValueSectionHandler" />
    <section name="PassManager" type="System.Configuration.NameValueSectionHandler" />
    <section name="PassDistribution" type="System.Configuration.NameValueSectionHandler" />
    <section name="PushNotification" type="System.Configuration.NameValueSectionHandler" />

    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
  </configSections>

  <connectionStrings>
    <add name="LocalConnection" connectionString="Data Source=localhost;Initial Catalog=MobileWallet;User Id=sa; Password=sa1" providerName="System.Data.SqlClient" />
  </connectionStrings>

  <appSettings>
    <add key="webpages:Version" value="3.0.0.0" />
    <add key="webpages:Enabled" value="false" />
    <add key="ClientValidationEnabled" value="true" />
    <add key="UnobtrusiveJavaScriptEnabled" value="true" />
  </appSettings>

  <system.web>
    <globalization culture="auto" uiCulture="auto"/>

    <authentication mode="Forms">
      <forms loginUrl="~/account/login" />
    </authentication>

    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5" />
  </system.web>

  <system.webServer>
    <modules>
      <remove name="FormsAuthenticationModule" />
    </modules>
    <handlers>
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" />
      <remove name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" />
      <remove name="ExtensionlessUrlHandler-Integrated-4.0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_32bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness32" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-ISAPI-4.0_64bit" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" modules="IsapiModule" scriptProcessor="%windir%\Microsoft.NET\Framework64\v4.0.30319\aspnet_isapi.dll" preCondition="classicMode,runtimeVersionv4.0,bitness64" responseBufferLimit="0" />
      <add name="ExtensionlessUrlHandler-Integrated-4.0" path="*." verb="GET,HEAD,POST,DEBUG,PUT,DELETE,PATCH,OPTIONS" type="System.Web.Handlers.TransferRequestHandler" preCondition="integratedMode,runtimeVersionv4.0" />
    </handlers>
    <staticContent>
      <remove fileExtension=".otf" />
      <mimeMap fileExtension=".otf" mimeType="application/x-font-otf" />
    </staticContent>
  </system.webServer>

  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Optimization" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="1.1.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="WebGrease" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-1.6.5135.21930" newVersion="1.6.5135.21930" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Razor" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-6.0.0.0" newVersion="6.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Helpers" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="1.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Mvc" publicKeyToken="31bf3856ad364e35" />
        <bindingRedirect oldVersion="0.0.0.0-5.2.3.0" newVersion="5.2.3.0" />
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.WebPages.Deployment" publicKeyToken="31bf3856ad364e35" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-3.0.0.0" newVersion="3.0.0.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>

  <entityFramework>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer" />
    </providers>
  </entityFramework>

  <unity xmlns="http://schemas.microsoft.com/practices/2010/unity">
    <container name="FileStorage">
      <register type="FileStorage.Core.IFileStorageConfig, FileStorage.Core" mapTo="FileStorage.BL.FileStorageConfig, FileStorage.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="FileStorage.BL.FileStorageConfig, FileStorage.BL">
        <lifetime type="singleton" />
      </register>

      <register type="FileStorage.Repository.Core.IFileStorageUnitOfWork, FileStorage.Repository.Core" mapTo="FileStorage.Repository.EF.FileStorageUnitOfWork, FileStorage.Repository.EF" />
      <register type="FileStorage.Core.IFileStorageService, FileStorage.Core" mapTo="FileStorage.BL.FileStorageService, FileStorage.BL" />
    </container>

    <container name="CertificateStorage">
      <register type="CertificateStorage.Core.ICertificateStorageConfig, CertificateStorage.Core" mapTo="CertificateStorage.BL.CertificateStorageConfig, CertificateStorage.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="CertificateStorage.BL.CertificateStorageConfig, CertificateStorage.BL">
        <lifetime type="singleton" />
      </register>

      <register type="CertificateStorage.Repository.Core.ICertificateStorageUnitOfWork, CertificateStorage.Repository.Core" mapTo="CertificateStorage.Repository.EF.CertificateStorageUnitOfWork, CertificateStorage.Repository.EF" />
      <register type="CertificateStorage.Core.ICertificateStorageService, CertificateStorage.Core" mapTo="CertificateStorage.BL.CertificateStorageService, CertificateStorage.BL" />
    </container>

    <container name="PassManager">
      <register type="Pass.Manager.Core.IPassManagerConfig, Pass.Manager.Core" mapTo="Pass.Manager.BL.PassManagerConfig, Pass.Manager.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="Pass.Manager.BL.PassManagerConfig, Pass.Manager.BL">
        <lifetime type="singleton" />
      </register>

      <register type="Pass.Manager.Core.IPassManagerUnitOfWork, Pass.Manager.Core" mapTo="Pass.Manager.Repository.EF.PassManagerUnitOfWork, Pass.Manager.Repository.EF" />
      <register type="Pass.Manager.Core.Services.IUserService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.UserService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassSiteService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassSiteService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassProjectService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassProjectService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassSiteUserService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassSiteUserService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassCertificateService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassCertificateService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassSiteCertificateService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassSiteCertificateService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassProjectFieldService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassProjectFieldService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassContentTemplateService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassContentTemplateService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassContentTemplateFieldService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassContentTemplateFieldService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassImageService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassImageService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassBeaconService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassBeaconService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassLocationService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassLocationService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassContentService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassContentService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassContentFieldService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassContentFieldService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassTemplateOnlineService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassTemplateOnlineService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassOnlineService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassOnlineService, Pass.Manager.BL" />
      <register type="Pass.Manager.Core.Services.IPassNotificationService, Pass.Manager.Core" mapTo="Pass.Manager.BL.Services.PassNotificationService, Pass.Manager.BL" />
    </container>

    <container name="PassContainer">
      <register type="Pass.Container.Core.IPassContainerConfig, Pass.Container.Core" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Pass.Container.Core.IPassTemplateConfig, Pass.Container.Core" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="Pass.Container.BL.PassContainerConfig, Pass.Container.BL">
        <lifetime type="singleton" />
      </register>

      <register type="Pass.Container.Repository.Core.IPassContainerUnitOfWork, Pass.Container.Repository.Core" mapTo="Pass.Container.Repository.EF.PassContainerUnitOfWork, Pass.Container.Repository.EF" />
      <register type="Pass.Container.Core.IPassTemplateService, Pass.Container.Core" mapTo="Pass.Container.BL.PassTemplateService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassService, Pass.Container.Core" mapTo="Pass.Container.BL.PassService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassProcessingAppleService, Pass.Container.Core" mapTo="Pass.Container.BL.PassProcessing.PassProcessingAppleService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassCertificateService, Pass.Container.Core" mapTo="Pass.Container.BL.PassCertificateService, Pass.Container.BL" />
      <register type="Pass.Container.Core.IPassTemplateStorageService, Pass.Container.Core" mapTo="Pass.Container.BL.PassTemplateStorageService, Pass.Container.BL" />
    </container>

    <container name="PassDistribution">
      <register type="Pass.Distribution.Core.IPassDistributionConfig, Pass.Distribution.Core" mapTo="Pass.Distribution.BL.PassDistributionConfig, Pass.Distribution.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Pass.Distribution.Core.Services.IPassDistributionService, Pass.Distribution.Core" mapTo="Pass.Distribution.BL.Services.PassDistributionService, Pass.Distribution.BL" />
    </container>

    <container name="PassNotification">
      <register type="Pass.Notification.Core.IPushNotificationConfig, Pass.Notification.Core" mapTo="Pass.Notification.BL.PushNotificationConfig, Pass.Notification.BL">
        <lifetime type="singleton" />
      </register>
      <register type="Common.Repository.IDbConfig, Common.Repository" mapTo="Pass.Notification.BL.PushNotificationConfig, Pass.Notification.BL">
        <lifetime type="singleton" />
      </register>
      
      <register type="Pass.Notification.Repository.Core.IPushNotificationUnitOfWork, Pass.Notification.Repository.Core" mapTo="Pass.Notification.Repository.EF.PushNotificationUnitOfWork, Pass.Notification.Repository.EF" />
      <register type="Pass.Notification.Core.IPushNotificationWorker, Pass.Notification.Core" mapTo="Pass.Notification.BL.PushSharpNotificationWorker, Pass.Notification.BL" />
      <register type="Pass.Notification.Core.IPushNotificationService, Pass.Notification.Core" mapTo="Pass.Notification.BL.PushNotificationService, Pass.Notification.BL" />
    </container>
  </unity>

  <FileStorage>
    <add key="StorageDeep" value="3" />
    <add key="MaxItemsNumber" value="100" />
    <add key="StoragePath" value="D:\Data\MW\FS\PM" />
    <add key="ConnectionStringName" value="LocalConnection" />
  </FileStorage>

  <CertificateStorage>
    <add key="ConnectionStringName" value="LocalConnection" />
    <add key="SecurityKey" value="1234567890987654" />
  </CertificateStorage>

  <PassContainer>
    <add key="PassWorkingFolder" value="D:\Data\MW\Temp\Pass" />

    <!--DB config-->
    <add key="ConnectionStringName" value="LocalConnection" />

    <!--Pass Template Config-->
    <add key="PassTemplateWorkingFolder" value="D:\Data\MW\Temp\PassTemplate" />

    <!--Apple pass generator-->
    <add key="AppleWebServerUrl" value="https://192.168.1.2:10443/Pass.Processing.Web/" />
    <add key="AppleWWDRCAPath" value="D:\Data\MW\Cert\Apple\AppleWWDRCA.cer" />
  </PassContainer>

  <PassManager>
    <add key="ConnectionStringName" value="LocalConnection" />
    <add key="WorkingFolder" value="D:\Data\MW\Temp\PassManager"/>
    <add key="WebDistributionUrl" value="https://192.168.1.2:10443/Pass.Distribution.Web" />
  </PassManager>

  <PassDistribution>
    <add key="SecurityKey" value="1234567890987654" />
  </PassDistribution>

  <PushNotification>
    <add key="ConnectionStringName" value="LocalConnection" />
  </PushNotification>

</configuration>