<!DOCTYPE HTML PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

@{
    Layout = "";
}

@using Pass.Manager.Web.Helpers
@using Pass.Manager.Web.Models.GeneralPassTemplate
@model Pass.Manager.Web.Models.GeneralPassTemplate.GeneralPassTemplate

@Styles.Render("~/bundles/passDesignerCss")
@Scripts.Render("~/bundles/passDesigner")
<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false"></script>

<div class="passDesignerBody">
    <div class="headerBlockOnDesigner">
        <div class="headerBlockContentDesigner">
            <a href="~/Home/MainPage">
                <img src="~/Images/createCard/PassLightLogo.png" class="headerLogoImg" />
            </a>
        </div>
    </div>
    <div id="body" class="bodyPassDesigner">
        <div id="topPanel" class="mainTabs">
            <p id="MainTab1" class="peter-river-flat-button tabMain active">Настройки</p>
            <p id="MainTab2" class="peter-river-flat-button tabMain">Дизайн</p>
            <p id="MainTab3" class="peter-river-flat-button tabMain">Содержимое</p>
            <p id="MainTab4" class="peter-river-flat-button tabMain" onclick="RemoveAllFieldBackPass(); AddFieldPassAgain(); ">Обратная сторона</p>
            <p id="MainTab5" class="peter-river-flat-button tabMain">Экран блокировки</p>
            <p id="MainTab6" class="peter-river-flat-button tabMain">Языки</p>
            <p id="MainTab7" class="peter-river-flat-button tabMain">Распространение</p>
            <p id="MainTab8" class="peter-river-flat-button tabMain saveTab" onclick="PostJsonData();">Сохранить пасс</p>
        </div>
        <div id="leftPanel" class="leftPanelDesigner">
            <div class="phoneBlockLeftPanel">
                <div id="divPassBody" class="passBodyBlock">
                    <div id="divFrontPass">

                        <!--Pass background image-->
                        <div id="divBackgroundImagePass" class="backgroundImgPassBlock">
                            <span>
                                <canvas id="backgroundCanvas" class="backgroundImgCanvas"></canvas>
                                <br />
                                <img id="backgroundImagePass" class="spanBackgroundImagePass" src="~/Images/createCard/myImages/backgroundImage2.jpg" />
                            </span>
                        </div>

                        <!--Transit icon on pass-->
                        <div id="transitIconsBlock">
                            <?xml version="1.0" encoding="iso-8859-1" ?>
                            <svg id="AirIconPass" class="transitIconPass airIconPass" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 64 64" xml:space="preserve">
                            <g>
                            <path d="M30,44c0,4.267,0.005,6.939,0.013,8.55L21,59v4c0,0,8.333-1.917,9.5-3.417s0.083,2.75,1.5,2.75s0.333-4.25,1.5-2.75
		                            S43,63,43,63v-4l-9.013-6.45C33.995,50.939,34,48.267,34,44c0-17.25,28,0,28,0v-4.833l-7-5.178V30c0-0.552-0.81-1-1.5-1
		                            S52,29.448,52,30v1.769l-5.208-3.853c0-10.833-1.708-9.75-1.708-9.75s-1.333,0.917-1.5,6.083c-0.1,3.105-3.18,0.943-5.622-1.277
		                            l-1.371-6.348L35,15.765c0-2.162,0-4.94,0-7.848c0-6.333-3.042-7.127-3.042-7.127S29,1.583,29,7.917c0,2.87,0,5.613,0,7.762
		                            l-1.75,0.871L25.841,23h0.001c0.201-0.118,0.398-0.252,0.591-0.393c-0.192,0.18-0.389,0.361-0.591,0.542
		                            c-2.408,2.154-5.328,4.124-5.426,1.101c-0.167-5.167-1.5-6.083-1.5-6.083s-1.708-1.083-1.708,9.75L12,31.769V30
		                            c0-0.552-0.81-1-1.5-1S9,29.448,9,30v3.989l-7,5.178V44C2,44,30,26.75,30,44z" />
                                </g>
                            </svg>
                            <svg id="TrainIconPass" class="transitIconPass" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 11.227 15" xml:space="preserve">
                            <path d="M9.807,15h1.42l-2.523-3.743c0.484-0.076,0.885-0.3,1.203-0.667c0.32-0.367,0.48-0.803,0.48-1.306
	                            V1.972c0-0.541-0.193-1.005-0.58-1.393C9.418,0.192,8.943,0,8.385,0H2.842C2.279,0,1.807,0.192,1.42,0.579
	                            C1.033,0.967,0.84,1.431,0.84,1.972v7.312c0,0.503,0.164,0.943,0.494,1.32c0.328,0.377,0.725,0.594,1.189,0.652L0,15h1.42
	                            l0.242-0.36h7.902L9.807,15z M8.963,10.038C8.791,10.212,8.566,10.3,8.297,10.3c-0.252,0-0.465-0.088-0.639-0.262
	                            C7.484,9.863,7.396,9.643,7.396,9.371c0-0.251,0.088-0.468,0.262-0.652c0.174-0.184,0.387-0.276,0.639-0.276
	                            c0.27,0,0.494,0.093,0.666,0.276C9.137,8.903,9.225,9.12,9.225,9.371C9.225,9.643,9.137,9.863,8.963,10.038z M2.059,2.156
	                            c0-0.271,0.088-0.493,0.262-0.668c0.172-0.174,0.395-0.261,0.666-0.261h5.252c0.271,0,0.498,0.087,0.682,0.261
	                            c0.186,0.175,0.277,0.397,0.277,0.668v2.34c0,0.271-0.092,0.494-0.277,0.668c-0.184,0.174-0.41,0.26-0.682,0.26H2.986
	                            c-0.271,0-0.494-0.086-0.666-0.26C2.146,4.99,2.059,4.768,2.059,4.496V2.156z M2.262,10.038C2.086,9.863,2,9.643,2,9.371
	                            C2,9.12,2.086,8.903,2.262,8.719C2.438,8.535,2.658,8.442,2.93,8.442c0.25,0,0.463,0.093,0.639,0.276
	                            C3.742,8.903,3.83,9.12,3.83,9.371c0,0.271-0.088,0.492-0.262,0.667C3.393,10.212,3.18,10.3,2.93,10.3
	                            C2.658,10.3,2.438,10.212,2.262,10.038z M2.475,13.431l0.658-0.983h4.961l0.66,0.983H2.475z" />
                            </svg>
                            <svg id="BusIconPass" class="transitIconPass" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 41.585 45.437" xml:space="preserve">
                            <path d="M39.477,11.11c-0.371-3.627-0.962-6.451-1.897-7.561c-3.855-4.564-30.859-4.898-33.925,0c-0.75,1.2-1.276,4.014-1.629,7.567
	                        C0.887,11.25,0,12.209,0,13.383v4.443c0,0.988,0.626,1.821,1.5,2.146c-0.207,6.998-0.039,14.299,0.271,17.93
	                        c0,2.803,1.883,2.338,1.883,2.338h1.765v3.026c0,1.2,1.237,2.171,2.761,2.171c1.526,0,2.763-0.971,2.763-2.171v-3.026h20.534v3.026
	                        c0,1.2,1.236,2.171,2.762,2.171c1.524,0,2.761-0.971,2.761-2.171v-3.026h0.58c0,0,2.216,0.304,2.358-1.016
	                        c0-3.621,0.228-11.646,0.04-19.221c0.929-0.291,1.607-1.147,1.607-2.177v-4.443C41.586,12.181,40.656,11.206,39.477,11.11z
	                         M10.25,4.2h20.735v3.137H10.25V4.2z M10.546,36.667c-1.628,0-2.947-1.32-2.947-2.948c0-1.627,1.319-2.946,2.947-2.946
	                        c1.628,0,2.948,1.319,2.948,2.946C13.494,35.347,12.175,36.667,10.546,36.667z M30.874,36.667c-1.627,0-2.949-1.32-2.949-2.948
	                        c0-1.627,1.321-2.946,2.949-2.946s2.947,1.319,2.947,2.946C33.822,35.347,32.502,36.667,30.874,36.667z M34.621,23.767H6.614V9.077
	                        h28.007V23.767z" />
                            </svg>
                            <svg id="BoatIconPass" class="transitIconPass" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 800 800" xml:space="preserve">
                            <path d="M261.365,47.66c0-26.322,21.338-47.66,47.66-47.66c21.904,0,40.162,14.86,45.739,34.988
	                        c0.649-0.035,1.262-0.194,1.921-0.194c19.786,0,35.826,16.041,35.826,35.827c0,4.826-0.984,9.416-2.714,13.618l0.015-0.001
	                        c12.266,0,22.21,9.943,22.21,22.209c0,12.266-9.943,22.21-22.21,22.21c-12.266,0-22.209-9.943-22.209-22.21
	                        c0-0.663,0.138-1.287,0.195-1.936c-3.518,1.155-7.208,1.936-11.112,1.936c-11.964,0-22.49-5.923-28.997-14.934
	                        c-5.733,2.443-12.037,3.806-18.663,3.806C282.703,95.32,261.365,73.981,261.365,47.66z M282.996,283.761h-65.277
	                        c-11.452,0-20.736,9.284-20.736,20.736v138.833l203.013-97.245l203.021,97.245V304.497c0-11.452-9.284-20.736-20.736-20.736h-65.277
	                         M517.004,263.025v-12.708c0-11.452-9.284-20.736-20.736-20.736h-50.365l-9.004-82.523h-73.798l-9.004,82.523h-50.365
	                        c-11.452,0-20.736,9.284-20.736,20.736v12.708H517.004z M400,369.079L98.362,513.564l89.321,260.573
	                        c41.466-19.282,94.755-37.264,149.379-37.264c87.78,0,158.328,41.81,250.997,63.127h15.393l98.186-286.436L400,369.079z" />
                            </svg>
                            <svg id="GenericIconPass" class="transitIconPass" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" x="0px" y="0px"
                                 viewBox="0 0 512 512" xml:space="preserve">
                            <path d="M310.627,438.627l160-160c12.497-12.496,12.497-32.758,0-45.255l-160-160c-12.497-12.496-32.758-12.496-45.255,0
	                            c-12.497,12.497-12.497,32.758,0,45.255L370.745,224H64c-17.673,0-32,14.327-32,32s14.327,32,32,32h306.745L265.372,393.373
	                            C259.124,399.621,256,407.811,256,416s3.124,16.379,9.372,22.627C277.869,451.124,298.13,451.124,310.627,438.627z" />
                            </svg>

                        </div>


                        <!--Header area on pass-->
                        <div id="divLogoImagePass" class="logoImagePassBlock">
                            <span>
                                <img class="spanLogoImagePass" src="~/Images/logo&strip/cleverLogo.png" />
                            </span>
                        </div>
                        <div id="divLogoTextPass" class="valueText logoTextPass">@Model.LogoText</div>
                        <div class="flexContainerHeaderFields headerFieldsLabels">
                            <div id="divHeaderLabelPass3" class="labelTextHeader labelText">@Model.FieldDetails.HeaderFields[2].Label</div>
                            <div id="divHeaderLabelPass2" class="labelTextHeader labelText">@Model.FieldDetails.HeaderFields[1].Label</div>
                            <div id="divHeaderLabelPass1" class="labelTextHeader labelText">@Model.FieldDetails.HeaderFields[0].Label</div>
                        </div>
                        <div class="flexContainerHeaderFields headerFieldsValues">
                            <div id="divHeaderValuePass3" class="valueTextHeader valueText">@Model.FieldDetails.HeaderFields[2].Value</div>
                            <div id="divHeaderValuePass2" class="valueTextHeader valueText">@Model.FieldDetails.HeaderFields[1].Value</div>
                            <div id="divHeaderValuePass1" class="valueTextHeader valueText">@Model.FieldDetails.HeaderFields[0].Value</div>
                        </div>

                        <!--Primary area on pass-->
                        <div id="divStripImagePass" class="divStripImagePass">
                            <span>
                                <img class="spanStripImagePass" src="~/Images/logo&strip/storeStrip7.jpg" />
                            </span>
                        </div>
                        <div id="divThumbnailImagePass" class="thumbnailImagePassBlock">
                            <span>
                                <img id="thumbnailImagePass" src="~/Images/createCard/Vitalik.png" />
                            </span>
                        </div>
                        <div id="flexContainerPrimaryValues" class="flexContainerPrimaryFields primaryFieldLabels">
                            <div id="divPrimaryValuePass1" class="valueTextPrimary valueText leftAlignPassText">@Model.FieldDetails.PrimaryFields[0].Label</div>
                            <div id="divPrimaryValuePass2" class="valueTextPrimary valueText">@Model.FieldDetails.PrimaryFields[1].Label</div>
                        </div>
                        <div id="flexContainerPrimaryLabels" class="flexContainerPrimaryFields primaryFieldValues">
                            <div id="divPrimaryLabelPass1" class="labelTextPrimary labelText leftAlignPassText">@Model.FieldDetails.PrimaryFields[0].Value</div>
                            <div id="divPrimaryLabelPass2" class="labelTextPrimary labelText">@Model.FieldDetails.PrimaryFields[1].Value</div>
                        </div>

                        <!--Auxiliary area on pass-->
                        <div id="auxiliaryAreaPass">
                            <div id="flexContainerAuxiliaryLabels" class="flexContainerAuxiliaryFields auxiliaryFieldLabels">
                                <div id="divAuxiliaryLabelPass1" class="labelTextAuxiliary labelText leftAlignPassText">@Model.FieldDetails.AuxiliaryFields[0].Label</div>
                                <div id="divAuxiliaryLabelPass2" class="labelTextAuxiliary labelText">@Model.FieldDetails.AuxiliaryFields[1].Label</div>
                                <div id="divAuxiliaryLabelPass3" class="labelTextAuxiliary labelText">@Model.FieldDetails.AuxiliaryFields[2].Label</div>
                                <div id="divAuxiliaryLabelPass4" class="labelTextAuxiliary labelText">@Model.FieldDetails.AuxiliaryFields[3].Label</div>
                                <div id="divAuxiliaryLabelPass5" class="labelTextAuxiliary labelText">@Model.FieldDetails.AuxiliaryFields[4].Label</div>
                            </div>
                            <div id="flexContainerAuxiliaryValues" class="flexContainerAuxiliaryFields auxiliaryFieldValues">
                                <div id="divAuxiliaryValuePass1" class="valueTextAuxiliary valueText leftAlignPassText">@Model.FieldDetails.AuxiliaryFields[0].Value</div>
                                <div id="divAuxiliaryValuePass2" class="valueTextAuxiliary valueText">@Model.FieldDetails.AuxiliaryFields[1].Value</div>
                                <div id="divAuxiliaryValuePass3" class="valueTextAuxiliary valueText">@Model.FieldDetails.AuxiliaryFields[2].Value</div>
                                <div id="divAuxiliaryValuePass4" class="valueTextAuxiliary valueText">@Model.FieldDetails.AuxiliaryFields[3].Value</div>
                                <div id="divAuxiliaryValuePass5" class="valueTextAuxiliary valueText">@Model.FieldDetails.AuxiliaryFields[4].Value</div>
                            </div>
                        </div>

                        <!--Secondary area on pass-->
                        <div id="secondaryAreaPass">
                            <div id="flexContainerSecondaryLabels" class="flexContainerSecondaryFields">
                                <div id="divSecondaryLabelPass1" class="labelTextSecondary labelText leftAlignPassText">@Model.FieldDetails.SecondaryFields[0].Label</div>
                                <div id="divSecondaryLabelPass2" class="labelTextSecondary labelText">@Model.FieldDetails.SecondaryFields[1].Label</div>
                                <div id="divSecondaryLabelPass3" class="labelTextSecondary labelText">@Model.FieldDetails.SecondaryFields[2].Label</div>
                                <div id="divSecondaryLabelPass4" class="labelTextSecondary labelText">@Model.FieldDetails.SecondaryFields[3].Label</div>
                            </div>
                            <div id="flexContainerSecondaryValues" class="flexContainerSecondaryFields secondaryFieldValues">
                                <div id="divSecondaryValuePass1" class="valueTextSecondary valueText leftAlignPassText">@Model.FieldDetails.SecondaryFields[0].Value</div>
                                <div id="divSecondaryValuePass2" class="valueTextSecondary valueText">@Model.FieldDetails.SecondaryFields[1].Value</div>
                                <div id="divSecondaryValuePass3" class="valueTextSecondary valueText">@Model.FieldDetails.SecondaryFields[2].Value</div>
                                <div id="divSecondaryValuePass4" class="valueTextSecondary valueText">@Model.FieldDetails.SecondaryFields[3].Value</div>
                            </div>
                        </div>

                        <!--Barcode area on pass-->
                        <div id="divBarcodePass">
                            <img id="aztecCodePass" class="barcodePass aztecCodeImgPass" src="~/Images/createCard/barcode/aztecPass.png" />
                            <img id="qrCodePass" class="barcodePass qrCodeImgPass active" src="~/Images/createCard/barcode/qrPass.png" />
                            <img id="pdf417CodePass" class="barcodePass pdf417CodeImgPass" src="~/Images/createCard/barcode/pdf417Pass.png" />
                        </div>
                    </div>


                    <!--Back area on pass-->
                    <div id="divbackPass" class="backAreaPass">
                        <img src="~/Images/createCard/myImages/backPass.png" class="backPassBackgroundImg" />
                        <div id="divBackOuter" class="backPassBlock">
                            <div id="divBackHack" class="backHackBlock">
                                <img src="~/Images/createCard/myImages/uutomatic_updates.png" class="automaticUpdateImg" />
                                <div id="divBackContentPass" class="backPassContentBlock">
                                    <div id="divBackFieldContentPass1" class="divBackFieldContentPass">
                                        <div id="labelFieldBackPass1" class="labelFieldBackPass"></div>
                                        <div id="valueFieldBackPass1" class="valueFieldBackPass"></div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="clearPanel" class="clearPanel"></div>
        <div id="darkAreaLockScreen" onclick="DisNoneDarkAreaAndMap();"></div>

        <!--Editing area-->
        <div id="rightPanel" class="rightPanelDesigner">
            <div class="tabbable" />
            <div id="myTabContent" class="active">
                <div id="contentMainTab1" class="tabMainContent active">
                    @Html.PassSettingsTab()
                </div>
                <div id="contentMainTab2" class="tabMainContent">
                    @Html.DesignTab()
                </div>
                <div id="contentMainTab3" class="tabMainContent">
                    @Html.FrontContentTab()
                </div>
                <div id="contentMainTab4" class="tabMainContent">
                    @Html.BackContentTab()
                </div>
                <div id="contentMainTab5" class="tabMainContent">
                    @Html.LockScreenTab()
                </div>
                <div id="contentMainTab6" class="tabMainContent">
                    @Html.LanguagesTab()
                </div>
                <div id="contentMainTab7" class="tabMainContent">
                    @Html.DistributionTab()
                </div>
            </div>
        </div>
    </div>
</div>
    

    <script type="text/javascript">

        //On load window
        function WindowOnLoad() {
        debugger;
        var fileInput = document.getElementById('logoImageInput'),
        stripFileInput = document.getElementById('stripImageInput'),
        thumbnailFileInput = document.getElementById('thumbnailImageInput'),
        backgroundFileInput = document.getElementById('backgroundImageInput');
        fileInput.onchange = HandleChanges;
        stripFileInput.onchange = HandleChanges;
        thumbnailFileInput.onchange = HandleChanges;
        backgroundFileInput.onchange = HandleChanges;
        fileInput.value = '';
        stripFileInput.value = '';
        //fileInput.className = 'customFile';
        //stripFileInput.className = 'customFile';
        BlurBackgroundImage();

        ChangeWidthHeaderTextFieldPass(1);
        ChangeWidthAuxiliaryTextFieldPass(1);
        ChangeWidthAuxiliaryTextFieldPass(2);
        ChangWidthFlexContainerHeaderPass();
        ChangesDependingPassType('coupon');
        };
        window.onload = WindowOnLoad();

        //On ready window
        jQuery(window).ready(function () {

        //JSON deserialize
        //Choice pass type (radiobutton)
        @switch (Model.PassStyle)
        {
            case PassStyle.BoardingPass:
                @:jQuery('#boardingPassImg').trigger('click');
                break;
            case PassStyle.Coupon:
            @:jQuery('#couponImg').trigger('click');
                                                                    break;
            case PassStyle.EventTicket:
            @:jQuery('#eventTicketImg').trigger('click');
                                                                    break;
            case PassStyle.Generic:
            @:jQuery('#genericImg').trigger('click');
                                                                    break;
            case PassStyle.StoreCard:
            @:jQuery('#storeCardImg').trigger('click');
                                                                    break;
        }

        //Choice transport type in transit pass (select list)
        jQuery('#transitType').val('@Model.FieldDetails.TransitType.ToString()').change();

        //Choice pass serial number type (radio button)
        @switch (Model.PassSerialNumberType)
        {
            case PassSerialNumberType.AutoGgenerated:
                @:jQuery('#optionsRadiosSerialNumber1').trigger('click');
                                                                    break;
            case PassSerialNumberType.Provided:
            @:jQuery('#optionsRadiosSerialNumber2').trigger('click');
                                                                    break;
            case PassSerialNumberType.SameForEachPass:
            @:jQuery('#optionsRadiosSerialNumber3').trigger('click');
                                                                    break;
        }

        //Choice pass sertificate (select list)
        //jQuery('#passCertificSelect').optSelected()

        //Set colors
        @*var divPassBodyColor = @Html.Raw(new JavaScriptSerializer().Serialize(ViewData["divPassBodyColor"]));
        var labelTextColor = @Html.Raw(new JavaScriptSerializer().Serialize(ViewData["labelTextColor"]));
        var valueTextColor = @Html.Raw(new JavaScriptSerializer().Serialize(ViewData["valueTextColor"]));
        jQuery('#divPassBody').css('background-color', divPassBodyColor);
        jQuery('.labelText').css('color', labelTextColor);
        jQuery('.valueText').css('color', valueTextColor);*@

        //Choice pass time zone (select list)

        //Location details

        //Choice pass link type (select list)
        @switch (Model.DistributionDetails.PassLinkType)
        {
            case PassLinkType.Private:
                @:jQuery('#distTypeSelect option[value="private"]').attr('selected', 'selected');
                                                                    break;
            case PassLinkType.Public:
            @:jQuery('#distTypeSelect option[value="public"]').attr('selected', 'selected');
                                                                    break;
        }

        //Choice void passes checkbox
        @switch (Model.DistributionDetails.AllPassesAsExpired)
        {
            case true:
                @:jQuery('#voidedCheckbox').attr('checked', 'checked');
                                                                    break;
            case false:
            @:jQuery('#voidedCheckbox').removeAttr('checked');
                                                                    break;
        }

        //Quantity restriction select list
        @if (Model.DistributionDetails.QuantityRestriction != null)
        {
            @:jQuery('#distQuantitySelect').val('1').change();
                                                            }

        //Date restriction select list
        @if (Model.DistributionDetails.DateRestriction != null)
        {
            @:jQuery('#distDateRestrSelect').val('1').change();
                                                            }

        //Issue password select list
        @if (Model.DistributionDetails.PasswordToIssue != null)
        {
            @:jQuery('#distPasswdSelect').val('1').change();
                                                            }

        //Password to update select list
        @if (Model.DistributionDetails.PasswordToUpdate != null)
        {
            @:jQuery('#distPasswdUpdSelect').val('1').change();
                                                            }

        //Choice barcode type
        @switch (Model.BarcodeDetails.BarcodeType)
        {
            case GeneralBarcodeType.AztecCode:
                @:jQuery('#aztecCode').trigger('click');
                                                                    break;
            case GeneralBarcodeType.QrCode:
            @:jQuery('#qrCode').trigger('click');
                                                                    break;
            case GeneralBarcodeType.Pdf417Code:
            @:jQuery('#pdf417Code').trigger('click');
                                                                    break;
        }

        //Choice encoded message (select list)
        @switch (Model.BarcodeDetails.EncodedMessage)
        {
            case EncodedMessage.EncodeThePassSerialNumber:
                @:jQuery('#barcodeMessageSelect').val('encodeThePassSerialNumber').change();
                                                                    break;
            case EncodedMessage.EncodeThePassUniqueId:
            @:jQuery('#barcodeMessageSelect').val('encodeThePassUniqueId').change();
                                                                    break;
            case EncodedMessage.EncodeTheUrlToUpdateThePass:
            @:jQuery('#barcodeMessageSelect').val('encodeTheUrlToUpdateThePass').change();
                                                                    break;
            case EncodedMessage.ProvideWhenPassIsCreated:
            @:jQuery('#barcodeMessageSelect').val('provideWhenPassIsCreated').change();
                                                                    break;
            case EncodedMessage.EncodeTheSameMessageOnEachPass:
            @:jQuery('#barcodeMessageSelect').val('encodeTheSameMessageOnEachPass').change();
                                                                    break;
        }

        //Choice barcode alternative text (select list)
        @switch (Model.BarcodeDetails.AlternativeText)
        {
            case AlternativeText.DisplayTheBarcodeContent:
                @:jQuery('#barcodeAltTextSelect').val('0').change();
                                                                    break;
            case AlternativeText.DisplayThePassSerialNumber:
            @:jQuery('#barcodeAltTextSelect').val('displayThePassSerialNumber').change();
                                                                    break;
            case AlternativeText.DisplayThePassUniqueId:
            @:jQuery('#barcodeAltTextSelect').val('displayThePassUniqueId').change();
                                                                    break;
            case AlternativeText.ProvideWhenPassIsCreated:
            @:jQuery('#barcodeAltTextSelect').val('provideWhenPassIsCreated').change();
                                                                    break;
            case AlternativeText.DisplayTheSameMessageOnEachPass:
            @:jQuery('#barcodeAltTextSelect').val('displayTheSameMessageOnEachPass').change();
                                                                    break;
            case AlternativeText.DoNotDisplayAnyAlternativeText:
            @:jQuery('#barcodeAltTextSelect').val('doNotDisplayAnyAlternativeText').change();
                                                                    break;
        }

        //Header fields
        @for (var a = 0; a < 3; a++)
        {

            //Marked fields checkboxes
            if (Model.FieldDetails.HeaderFields[a].IsMarkedField)
            {
                @:jQuery('#checkboxHeader' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxHeader' + (@a + 1)).removeAttr('checked');
                                                                }
                                                                @:CheckAndUncheckFieldFront('checkboxHeader' + (@a + 1));

            //Dynamic and fixed radio button
            if (Model.FieldDetails.HeaderFields[a].IsDynamicLabel)
            {
                @:jQuery('#headerLabelRadios' + (@a + 1) + '2').trigger('click');
                                                                }
            else
            {
                @:jQuery('#headerLabelRadios' + (@a + 1) + '1').trigger('click');
                                                                }
            if (Model.FieldDetails.HeaderFields[a].IsDynamicValue)
            {
                @:jQuery('#headerValueRadios' + (@a + 1) + '2').trigger('click');
                                                                }
            else
            {
                @:jQuery('#headerValueRadios' + (@a + 1) + '1').trigger('click');
                                                                }

            //Field data type (select list) (without DateTime case)
            switch (Model.FieldDetails.HeaderFields[a].Type)
            {
                case GeneralField.DataType.Text:
                    @:jQuery('#selectDataTypeHeader' + (@a + 1)).val('text').change();
                                                                        break;
                case GeneralField.DataType.Number:
                @:jQuery('#selectDataTypeHeader' + (@a + 1)).val('number').change();
                                                                        break;
                case GeneralField.DataType.Currency:
                @:jQuery('#selectDataTypeHeader' + (@a + 1)).val('currency').change();
                                                                        break;
                case GeneralField.DataType.Date:
                @:jQuery('#selectDataTypeHeader' + (@a + 1)).val('date').change();
                                                                        break;
            }

            //Number style type (select list)
            switch (Model.FieldDetails.HeaderFields[a].NumberStyle)
            {
                case GeneralField.NumberStyleType.Decimal:
                    @:jQuery('#selectNumbStyleTypeHeader' + (@a + 1)).val('decimal').change();
                                                                        break;
                case GeneralField.NumberStyleType.Percent:
                @:jQuery('#selectNumbStyleTypeHeader' + (@a + 1)).val('percent').change();
                                                                        break;
                case GeneralField.NumberStyleType.Scientific:
                @:jQuery('#selectNumbStyleTypeHeader' + (@a + 1)).val('scientific').change();
                                                                        break;
                case GeneralField.NumberStyleType.SpellOut:
                @:jQuery('#selectNumbStyleTypeHeader' + (@a + 1)).val('spellOut').change();
                                                                        break;
            }

            //Currency code (select list)
            @:jQuery('#currencyCodeSelectHeader' + (@a + 1)).val('@Model.FieldDetails.HeaderFields[a].CurrencyCode').change();

            //Number style type (select list) (without none case)
            switch (Model.FieldDetails.HeaderFields[a].DateStyle)
            {
                case GeneralField.DateStyleType.Short:
                    @:jQuery('#selectDateStyleTypeHeader' + (@a + 1)).val('short').change();
                                                                        break;
                case GeneralField.DateStyleType.Medium:
                @:jQuery('#selectDateStyleTypeHeader' + (@a + 1)).val('medium').change();
                                                                        break;
                case GeneralField.DateStyleType.Long:
                @:jQuery('#selectDateStyleTypeHeader' + (@a + 1)).val('long').change();
                                                                        break;
                case GeneralField.DateStyleType.Full:
                @:jQuery('#selectDateStyleTypeHeader' + (@a + 1)).val('full').change();
                                                                        break;
            }

            //Ignores time zone checkbox
            if (Model.FieldDetails.HeaderFields[a].IgnoresTimeZone)
            {
                @:jQuery('#checkboxIgnoreDataHeader' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxIgnoreDataHeader' + (@a + 1)).removeAttr('checked');
                                                                }

            //'Is relative' checkbox
            if (Model.FieldDetails.HeaderFields[a].IsRelative)
            {
                @:jQuery('#checkboxRelativeDataHeader' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxRelativeDataHeader' + (@a + 1)).removeAttr('checked');
                                                                }
        }

        //Primary fields
        @for (var a = 0; a < 2; a++)
        {

            //Marked fields checkboxes
            if (Model.FieldDetails.PrimaryFields[a].IsMarkedField)
            {
                @:jQuery('#checkboxPrimary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxPrimary' + (@a + 1)).removeAttr('checked');
                                                                }
                                                                @:CheckAndUncheckFieldFront('checkboxPrimary' + (@a + 1));

            //Dynamic and fixed radio button
            if (Model.FieldDetails.PrimaryFields[a].IsDynamicLabel)
            {
                @:jQuery('#primaryLabelRadios' + (@a + 1) + '2').trigger('click');
                                                                }
            else
            {
                @:jQuery('#primaryLabelRadios' + (@a + 1) + '1').trigger('click');
                                                                }
            if (Model.FieldDetails.PrimaryFields[a].IsDynamicValue)
            {
                @:jQuery('#primaryValueRadios' + (@a + 1) + '2').trigger('click');
                                                                }
            else
            {
                @:jQuery('#primaryValueRadios' + (@a + 1) + '1').trigger('click');
                                                                }

            //Field data type (select list) (without DateTime case)
            switch (Model.FieldDetails.PrimaryFields[a].Type)
            {
                case GeneralField.DataType.Text:
                    @:jQuery('#selectDataTypePrimary' + (@a + 1)).val('text').change();
                                                                        break;
                case GeneralField.DataType.Number:
                @:jQuery('#selectDataTypePrimary' + (@a + 1)).val('number').change();
                                                                        break;
                case GeneralField.DataType.Currency:
                @:jQuery('#selectDataTypePrimary' + (@a + 1)).val('currency').change();
                                                                        break;
                case GeneralField.DataType.Date:
                @:jQuery('#selectDataTypePrimary' + (@a + 1)).val('date').change();
                                                                        break;
            }

            //Number style type (select list)
            switch (Model.FieldDetails.PrimaryFields[a].NumberStyle)
            {
                case GeneralField.NumberStyleType.Decimal:
                    @:jQuery('#selectNumbStyleTypePrimary' + (@a + 1)).val('decimal').change();
                                                                        break;
                case GeneralField.NumberStyleType.Percent:
                @:jQuery('#selectNumbStyleTypePrimary' + (@a + 1)).val('percent').change();
                                                                        break;
                case GeneralField.NumberStyleType.Scientific:
                @:jQuery('#selectNumbStyleTypePrimary' + (@a + 1)).val('scientific').change();
                                                                        break;
                case GeneralField.NumberStyleType.SpellOut:
                @:jQuery('#selectNumbStyleTypePrimary' + (@a + 1)).val('spellOut').change();
                                                                        break;
            }

            //Currency code (select list)
            @:jQuery('#currencyCodeSelectPrimary' + (@a + 1)).val('@Model.FieldDetails.PrimaryFields[a].CurrencyCode').change();

            //Number style type (select list) (without none case)
            switch (Model.FieldDetails.PrimaryFields[a].DateStyle)
            {
                case GeneralField.DateStyleType.Short:
                    @:jQuery('#selectDateStyleTypePrimary' + (@a + 1)).val('short').change();
                                                                        break;
                case GeneralField.DateStyleType.Medium:
                @:jQuery('#selectDateStyleTypePrimary' + (@a + 1)).val('medium').change();
                                                                        break;
                case GeneralField.DateStyleType.Long:
                @:jQuery('#selectDateStyleTypePrimary' + (@a + 1)).val('long').change();
                                                                        break;
                case GeneralField.DateStyleType.Full:
                @:jQuery('#selectDateStyleTypePrimary' + (@a + 1)).val('full').change();
                                                                        break;
            }

            //Ignores time zone checkbox
            if (Model.FieldDetails.PrimaryFields[a].IgnoresTimeZone)
            {
                @:jQuery('#checkboxIgnoreDataPrimary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxIgnoreDataPrimary' + (@a + 1)).removeAttr('checked');
                                                                }

            //'Is relative' checkbox
            if (Model.FieldDetails.PrimaryFields[a].IsRelative)
            {
                @:jQuery('#checkboxRelativeDataPrimary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxRelativeDataPrimary' + (@a + 1)).removeAttr('checked');
                                                                }
        }

        //Auxiliary fields
        @for (var a = 0; a < 5; a++)
        {

            //Marked fields checkboxes
            if (Model.FieldDetails.AuxiliaryFields[a].IsMarkedField)
            {
                @:jQuery('#checkboxAuxiliary' + (@a + 1)).attr('checked', 'checked');
                                                                                                    }
            else
            {
                @:jQuery('#checkboxAuxiliary' + (@a + 1)).removeAttr('checked');
                                                                                                    }
                                                                                                    @:CheckAndUncheckFieldFront('checkboxAuxiliary' + (@a + 1));

            //Dynamic and fixed radio button
            if (Model.FieldDetails.AuxiliaryFields[a].IsDynamicLabel)
            {
                @:jQuery('#auxiliaryLabelRadios' + (@a + 1) + '2').trigger('click');
                                                                                                    }
            else
            {
                @:jQuery('#auxiliaryLabelRadios' + (@a + 1) + '1').trigger('click');
                                                                                                    }
            if (Model.FieldDetails.AuxiliaryFields[a].IsDynamicValue)
            {
                @:jQuery('#auxiliaryValueRadios' + (@a + 1) + '2').trigger('click');
                                                                                                    }
            else
            {
                @:jQuery('#auxiliaryValueRadios' + (@a + 1) + '1').trigger('click');
                                                                                                    }

            //Field data type (select list) (without DateTime case)
            switch (Model.FieldDetails.AuxiliaryFields[a].Type)
            {
                case GeneralField.DataType.Text:
                    @:jQuery('#selectDataTypeAuxiliary' + (@a + 1)).val('text').change();
                                                                        break;
                case GeneralField.DataType.Number:
                @:jQuery('#selectDataTypeAuxiliary' + (@a + 1)).val('number').change();
                                                                         break;
                case GeneralField.DataType.Currency:
                @:jQuery('#selectDataTypeAuxiliary' + (@a + 1)).val('currency').change();
                                                                        break;
                case GeneralField.DataType.Date:
                @:jQuery('#selectDataTypeAuxiliary' + (@a + 1)).val('date').change();
                                                                        break;
            }

            //Number style type (select list)
            switch (Model.FieldDetails.AuxiliaryFields[a].NumberStyle)
            {
                case GeneralField.NumberStyleType.Decimal:
                    @:jQuery('#selectNumbStyleTypeAuxiliary' + (@a + 1)).val('decimal').change();
                                                                        break;
                case GeneralField.NumberStyleType.Percent:
                @:jQuery('#selectNumbStyleTypeAuxiliary' + (@a + 1)).val('percent').change();
                                                                         break;
                case GeneralField.NumberStyleType.Scientific:
                @:jQuery('#selectNumbStyleTypeAuxiliary' + (@a + 1)).val('scientific').change();
                                                                        break;
                case GeneralField.NumberStyleType.SpellOut:
                @:jQuery('#selectNumbStyleTypeAuxiliary' + (@a + 1)).val('spellOut').change();
                                                                        break;
            }

            //Currency code (select list)
            @:jQuery('#currencyCodeSelectAuxiliary' + (@a + 1)).val('@Model.FieldDetails.AuxiliaryFields[a].CurrencyCode').change();

            //Number style type (select list) (without none case)
            switch (Model.FieldDetails.AuxiliaryFields[a].DateStyle)
            {
                case GeneralField.DateStyleType.Short:
                    @:jQuery('#selectDateStyleTypeAuxiliary' + (@a + 1)).val('short').change();
                                                                        break;
                case GeneralField.DateStyleType.Medium:
                @:jQuery('#selectDateStyleTypeAuxiliary' + (@a + 1)).val('medium').change();
                                                                         break;
                case GeneralField.DateStyleType.Long:
                @:jQuery('#selectDateStyleTypeAuxiliary' + (@a + 1)).val('long').change();
                                                                        break;
                case GeneralField.DateStyleType.Full:
                @:jQuery('#selectDateStyleTypeAuxiliary' + (@a + 1)).val('full').change();
                                                                        break;
            }

            //Ignores time zone checkbox
            if (Model.FieldDetails.AuxiliaryFields[a].IgnoresTimeZone)
            {
                @:jQuery('#checkboxIgnoreDataAuxiliary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxIgnoreDataAuxiliary' + (@a + 1)).removeAttr('checked');
                                                                }

            //'Is relative' checkbox
            if (Model.FieldDetails.AuxiliaryFields[a].IsRelative)
            {
                @:jQuery('#checkboxRelativeDataAuxiliary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxRelativeDataAuxiliary' + (@a + 1)).removeAttr('checked');
                                                                }
        }

        //Secondary fields
        @for (var a = 0; a < 4; a++)
        {

            //Marked fields checkboxes
            if (Model.FieldDetails.SecondaryFields[a].IsMarkedField)
            {
                @:jQuery('#checkboxSecondary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxSecondary' + (@a + 1)).removeAttr('checked');
                                                                }
                                                                @:CheckAndUncheckFieldFront('checkboxSecondary' + (@a + 1));

            //Dynamic and fixed radio button
            if (Model.FieldDetails.SecondaryFields[a].IsDynamicLabel)
            {
                @:jQuery('#secondaryLabelRadios' + (@a + 1) + '2').trigger('click');
                                                                }
            else
            {
                @:jQuery('#secondaryLabelRadios' + (@a + 1) + '1').trigger('click');
                                                                }
            if (Model.FieldDetails.SecondaryFields[a].IsDynamicValue)
            {
                @:jQuery('#secondaryValueRadios' + (@a + 1) + '2').trigger('click');
                                                                }
            else
            {
                @:jQuery('#secondaryValueRadios' + (@a + 1) + '1').trigger('click');
                                                                }

            //Field data type (select list) (without DateTime case)
            switch (Model.FieldDetails.SecondaryFields[a].Type)
            {
                case GeneralField.DataType.Text:
                    @:jQuery('#selectDataTypeSecondary' + (@a + 1)).val('text').change();
                                                                        break;
                case GeneralField.DataType.Number:
                @:jQuery('#selectDataTypeSecondary' + (@a + 1)).val('number').change();
                                                                        break;
                case GeneralField.DataType.Currency:
                @:jQuery('#selectDataTypeSecondary' + (@a + 1)).val('currency').change();
                                                                        break;
                case GeneralField.DataType.Date:
                @:jQuery('#selectDataTypeSecondary' + (@a + 1)).val('date').change();
                                                                        break;
            }

            //Number style type (select list)
            switch (Model.FieldDetails.SecondaryFields[a].NumberStyle)
            {
                case GeneralField.NumberStyleType.Decimal:
                    @:jQuery('#selectNumbStyleTypeSecondary' + (@a + 1)).val('decimal').change();
                                                                        break;
                case GeneralField.NumberStyleType.Percent:
                @:jQuery('#selectNumbStyleTypeSecondary' + (@a + 1)).val('percent').change();
                                                                        break;
                case GeneralField.NumberStyleType.Scientific:
                @:jQuery('#selectNumbStyleTypeSecondary' + (@a + 1)).val('scientific').change();
                                                                        break;
                case GeneralField.NumberStyleType.SpellOut:
                @:jQuery('#selectNumbStyleTypeSecondary' + (@a + 1)).val('spellOut').change();
                                                                        break;
            }

            //Currency code (select list)
            @:jQuery('#currencyCodeSelectSecondary' + (@a + 1)).val('@Model.FieldDetails.SecondaryFields[a].CurrencyCode').change();

            //Number style type (select list) (without none case)
            switch (Model.FieldDetails.SecondaryFields[a].DateStyle)
            {
                case GeneralField.DateStyleType.Short:
                    @:jQuery('#selectDateStyleTypeSecondary' + (@a + 1)).val('short').change();
                                                                        break;
                case GeneralField.DateStyleType.Medium:
                @:jQuery('#selectDateStyleTypeSecondary' + (@a + 1)).val('medium').change();
                                                                        break;
                case GeneralField.DateStyleType.Long:
                @:jQuery('#selectDateStyleTypeSecondary' + (@a + 1)).val('long').change();
                                                                        break;
                case GeneralField.DateStyleType.Full:
                @:jQuery('#selectDateStyleTypeSecondary' + (@a + 1)).val('full').change();
                                                                        break;
            }

            //Ignores time zone checkbox
            if (Model.FieldDetails.SecondaryFields[a].IgnoresTimeZone)
            {
                @:jQuery('#checkboxIgnoreDataSecondary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxIgnoreDataSecondary' + (@a + 1)).removeAttr('checked');
                                                                }

            //'Is relative' checkbox
            if (Model.FieldDetails.SecondaryFields[a].IsRelative)
            {
                @:jQuery('#checkboxRelativeDataSecondary' + (@a + 1)).attr('checked', 'checked');
                                                                }
            else
            {
                @:jQuery('#checkboxRelativeDataSecondary' + (@a + 1)).removeAttr('checked');
                                                                }
        }


        });


        //Images inputs
        function handleFileSelect(evt) {
        var files = evt.target.files,
        className = evt.target.id.replace('logo', 'spanLogo').replace('strip', 'spanStrip').replace('thumbnail', 'spanThumbnail').replace('background', 'spanBackground').replace('Input', 'Pass'),
        divId = evt.target.id.replace('logo', 'divLogo').replace('strip', 'divStrip').replace('thumbnail', 'divThumbnail').replace('background', 'divBackground').replace('Input', 'Pass'),
        span = document.createElement('span'),
        reader = new FileReader();

        // Only process image files.
        if (!files[0].type.match('image.*')) {
        return;
        }
        reader.onload = (function (theFile) {
        return function (e) {

        // Render thumbnail.
        span = document.createElement('span');
        span.innerHTML = ['<img class="' + className + '" src="', e.target.result,'" title="', escape(theFile.name), '" />'].join('');
        document.getElementById(divId).innerHTML = "";
        document.getElementById(divId).insertBefore(span, null);
        };
        })(files);

        // Read in the image file as a data URL.
        reader.readAsDataURL(files[0]);
        ChangeLeftPropertyLogoText();
        if (divId == 'divBackgroundImagePass') {
        BlurBackgroundImage();
        };


        }
        document.getElementById('logoImageInput').addEventListener('change', handleFileSelect, false);
        document.getElementById('stripImageInput').addEventListener('change', handleFileSelect, false);
        document.getElementById('thumbnailImageInput').addEventListener('change', handleFileSelect, false);
        document.getElementById('backgroundImageInput').addEventListener('change', handleFileSelect, false);

        function HandleChanges(evt) {
        var imgNameId = evt.target.id.replace('ImageInput', 'Name');
        var file = document.getElementById(evt.target.id).value;
        var reWin = /.*\\(.*)/;
        var fileTitle = file.replace(reWin, "$1"); //выдираем название файла
        var reUnix = /.*\/(.*)/;
        fileTitle = fileTitle.replace(reUnix, "$1"); //выдираем название файла
        document.getElementById(imgNameId).innerHTML = fileTitle;
        RepositionRemoveIcon();
        //var RegExExt = /.*\.(.*)/;
        //var ext = fileTitle.replace(RegExExt, "$1"); //и его расширение
        };

        //Blur background image
        function BlurBackgroundImage() {
        stackBlurImage('backgroundImagePass', 'backgroundCanvas', 70, false);
        };

        //Remove image on pass
        jQuery('.removeImage').click(function (evt) {
        var itemId = evt.target.id.replace('remove', '');
        console.log(itemId);
        document.getElementById('div' + itemId + 'ImagePass').innerHTML = '';
        itemId = itemId.toLowerCase();
        document.getElementById(itemId + 'Name').innerHTML = 'Файл не выбран';
        RepositionRemoveIcon();
        });

        //Reposition remove icon
        function RepositionRemoveIcon() {
        var max = Math.max(document.getElementById('logoName').offsetWidth, document.getElementById('stripName')
        .offsetWidth, document.getElementById('thumbnailName').offsetWidth, document.getElementById('backgroundName').offsetWidth);
        document.getElementById('removeLogo').style.marginLeft = max + 203 + 'px';
        document.getElementById('removeStrip').style.marginLeft = max + 203 + 'px';
        document.getElementById('removeThumbnail').style.marginLeft = max + 203 + 'px';
        document.getElementById('removeBackground').style.marginLeft = max + 203 + 'px';
        };

        //Flippy effect
        var j = jQuery.noConflict();
        jQuery("#MainTab4").click(function () {
        if (!jQuery("#MainTab4").hasClass("active")) {
        j("#divPassBody").flippy({
        color_target: "#ffffff",
        content: j("#divbackPass"),
        direction: "LEFT",
        duration: "200"
        });
        j("#MainTab4").removeClass("flippy");
        return true;
        }

        });

        jQuery("#MainTab1, #MainTab2, #MainTab3, #MainTab5, #MainTab6, #MainTab7").click(function () {
        if (jQuery("#MainTab4").hasClass("active")) {
        j("#divPassBody").flippyReverse({
        //content: j("#" + (this).id),
        content: j("#divFrontPass"),
        direction: "RIGHT",
        duration: "350"
        });
        }
        if (jQuery('.passTypeImg.selected').attr('data-pass') == 'eventTicket') {
        setTimeout(function () { BlurBackgroundImage(); }, 150);
        }
        });

        //Main content tabs
        jQuery('#topPanel p.tabMain').click(function () {
        var clickId = jQuery(this).attr('id');
        if (clickId != jQuery('#topPanel p.active').attr('id')) {
        jQuery('#topPanel p.active').removeClass('active');
        jQuery(this).addClass('active');
        jQuery('#rightPanel div').removeClass('active');
        jQuery('#content' + clickId).addClass('active');
        }
        });

        //Front content tabs
        jQuery('#wrapper p.tabFrontContent').click(function () {
        var clickId = jQuery(this).attr('id');
        if (clickId != jQuery('#wrapper p.active').attr('id')) {
        jQuery('#wrapper p.active').removeClass('active');
        jQuery(this).addClass('active');
        jQuery('#wrapper div').removeClass('active');
        jQuery('#con_' + clickId).addClass('active');
        }
        });
        jQuery('#MainTab3').click(function () {
        jQuery('#wrapper p.active').removeClass('active');
        jQuery('#wrapper div').removeClass('active');
        jQuery('#con_tab0').addClass('active');
        });

        //Change type of barcode
        jQuery('#divBarcodeFormat input').click(function () {
        var clickId = jQuery(this).attr('id');
        if (clickId != jQuery('#divBarcodeFormat input.active').attr('id')) {
        jQuery('#divBarcodeFormat input.active').removeClass('active');
        jQuery(this).addClass('active');
        jQuery('#divBarcodePass img').removeClass('active');
        jQuery('#' + clickId + 'Pass').addClass('active');
        }
        });

        //Change text color
        function ChangeLabelTextColor(color) {
        var labelElements = document.getElementsByClassName("labelText");
        for (var i = 0, labelElLength = labelElements.length; i < labelElLength; i++) {
        labelElements[i].style.color = color;
        }
        var transitIcons = document.getElementsByClassName("transitIconPass");
        for (var i = 0, transIconsLength = transitIcons.length; i < transIconsLength; i++) {
        transitIcons[i].style.fill = color;
        }
        }

        function ChangeValueTextColor(color) {
        var labelElements = document.getElementsByClassName("valueText");
        for (var i = 0, labelElLength = labelElements.length; i < labelElLength; i++) {
        labelElements[i].style.color = color;
        }
        }

        //Add field to back content
        function AddFieldBackContent() {
        var lastChild = jQuery("#mainCollapsePanelBackContent").children().last(),
        lastChildId = parseInt(lastChild.attr('id').toString().slice(-2).replace('t', ''), 10),
        content = '',
        aHref = '',
        tempId = '',
        tempName = '',
        propCheckedFixedLabel = '',
        propCheckedDynamicLabel = '',
        propCheckedFixedValue = '',
        propCheckedDynamicValue = '',
        replacedHtml = '',
        //stringContent = '/Content' + lastChildID + '/g',
        stringContent = new RegExp('Content' + lastChildId, 'g'),
        stringBack = new RegExp('Back' + lastChildId, 'g'),
        stringInput = new RegExp('Input' + lastChildId, 'g'),
        stringField = new RegExp('Field' + lastChildId, 'g'),
        stringLabel = new RegExp('Label' + lastChildId, 'g'),
        stringValue = new RegExp('Value' + lastChildId, 'g');
        jQuery('<div />', {
        id: 'collapsePanelBackContent' + (lastChildId + 1)
        }).appendTo('#mainCollapsePanelBackContent');

        //Save property 'checked' radio buttons last field
        propCheckedFixedLabel = jQuery('#collapseContentLabelBack' + lastChildId + '1').prop('checked');
        propCheckedDynamicLabel = jQuery('#collapseContentLabelBack' + lastChildId + '2').prop('checked');
        propCheckedFixedValue = jQuery('#collapseContentValueBack' + lastChildId + '1').prop('checked');
        propCheckedDynamicValue = jQuery('#collapseContentValueBack' + lastChildId + '2').prop('checked');

        //Copy content last field to new field
        content = jQuery('#collapsePanelBackContent' + lastChildId).html();
        jQuery('#collapsePanelBackContent' + (lastChildId + 1)).html(content);

        //Change attributes in new field
        replacedHtml = jQuery('#collapsePanelBackContent' + (lastChildId + 1)).html().replace(stringContent, 'Content' + (lastChildId + 1)).replace(stringBack, 'Back' + (lastChildId + 1))
        .replace(stringInput, 'Input' + (lastChildId + 1)).replace(stringField, 'Field' + (lastChildId + 1))
        .replace(stringLabel, 'Label' + (lastChildId + 1)).replace(stringValue, 'Value' + (lastChildId + 1));
        jQuery('#collapsePanelBackContent' + (lastChildId + 1)).html(replacedHtml);

        jQuery('#collapseContentLabelBack' + lastChildId + '1').prop('checked', propCheckedFixedLabel);
        jQuery('#collapseContentLabelBack' + lastChildId + '2').prop('checked', propCheckedDynamicLabel);
        jQuery('#collapseContentValueBack' + lastChildId + '1').prop('checked', propCheckedFixedValue);
        jQuery('#collapseContentValueBack' + lastChildId + '2').prop('checked', propCheckedDynamicValue);

        DisplayNoneRadioButtonPrompt('collapseContentLabelBack' + (lastChildId + 1) + '1');
        DisplayNoneRadioButtonPrompt('collapseContentValueBack' + (lastChildId + 1) + '1');
        AddFieldBackContentPass(lastChildId + 1);
        jQuery("[data-toggle='tooltip']").tooltip();
        }

        //Add field to back content pass
        function AddFieldBackContentPass(lastChildId) {
        if (jQuery('#mainCollapsePanelBackContent').children().size() == 1 && jQuery('#mainCollapsePanelBackContent').attr('class') == 'displayNone') {
        jQuery('#collapsePanelBackContent' + tempId).removeClass('displayNone');
        jQuery('#divBackFieldContentPass' + tempId).removeClass('displayNone');
        } else {jQuery('<div />', {
        id: 'divBackFieldContentPass' + lastChildId,
        class: 'divBackFieldContentPass'
        }).appendTo('#divBackContentPass');
        jQuery('<div />', {
        id: 'labelFieldBackPass' + lastChildId,
        class: 'labelFieldBackPass'
        }).appendTo('#divBackFieldContentPass' + lastChildId);
        jQuery('<div />', {
        id: 'valueFieldBackPass' + lastChildId,
        class: 'valueFieldBackPass'
        }).appendTo('#divBackFieldContentPass' + lastChildId);
        }
        }

        //Bind back inputs to pass fields
        function BindBackInputToFieldPass(id, value) {
        var imputId = id.slice(-2).replace('t', '');
        document.getElementById('labelFieldBackPass' + imputId).innerHTML = value;
        }

        //Bind back textarea to pass fields
        function BindBackTextareaToFieldPass(id, value) {
        var imputId = id.slice(-2).replace('t', '');
        document.getElementById('valueFieldBackPass' + imputId).innerHTML = value;
        }

        //Remove field from back content
        function RemoveFieldFromBackContent(id) {
        var tempId = id.slice(-2).replace('d', '');
        if (jQuery('#mainCollapsePanelBackContent').children().size() == 1) {
        jQuery('#collapsePanelBackContent' + tempId).addClass('displayNone');
        jQuery('#divBackFieldContentPass' + tempId).addClass('displayNone');
        } else {
        jQuery('#collapsePanelBackContent' + tempId).remove();
        jQuery('#divBackFieldContentPass' + tempId).remove();
        }
        }

        //Remove all field in back content pass
        function RemoveAllFieldBackPass() {
        jQuery("#divBackContentPass").html("");
        }

        function AddFieldPassAgain() {
        var childs = jQuery("#mainCollapsePanelBackContent").children().toArray(),
        tempId = '';
        for (var i = 0; i < childs.length; i++) {
        tempId = childs[i].getAttribute('id').slice(-2).replace('t', '');
        jQuery('<div />', {
        id: 'divBackFieldContentPass' + tempId,
        class: 'divBackFieldContentPass'
        }).appendTo('#divBackContentPass');
        jQuery('<div />', {
        id: 'labelFieldBackPass' + tempId,
        class: 'labelFieldBackPass',
        text: jQuery('#inputBackFieldContent' + tempId).val()
        }).appendTo('#divBackFieldContentPass' + tempId);
        jQuery('<div />', {
        id: 'valueFieldBackPass' + tempId,
        class: 'valueFieldBackPass',
        text: jQuery('#textareaBackFieldContent' + tempId).val()
        }).appendTo('#divBackFieldContentPass' + tempId);
        }
        }

        ;

        //Change width text fields on header pass area
        function ChangeWidthHeaderTextFieldPass(someId) {
        var tempId = someId.toString().slice(-1),
        max = 0;
        document.getElementById('divHeaderLabelPass' + tempId).style.width = 'auto';
        document.getElementById('divHeaderValuePass' + tempId).style.width = 'auto';
        max = Math.max(document.getElementById('divHeaderLabelPass' + tempId).offsetWidth, document.getElementById('divHeaderValuePass' + tempId).offsetWidth);
        if (max > 0) {
        document.getElementById('divHeaderLabelPass' + tempId).style.width = max + 'px';
        document.getElementById('divHeaderValuePass' + tempId).style.width = max + 'px';
        }
        ChangWidthFlexContainerHeaderPass();
        }



        //Change width flex container on header text area
        function ChangWidthFlexContainerHeaderPass() {
        var tempWidth = 0,
        maxWidth = 165;
        jQuery('#divLogoTextPass').css('width', 'auto');
        tempWidth = 270 - (jQuery('#divLogoImagePass').width() + jQuery('#divLogoTextPass').width()) - 14;
        if (tempWidth < maxWidth) {
        jQuery('.flexContainerHeaderFields').css('width', tempWidth + 'px');
        jQuery('.flexContainerHeaderFields').css('left', 105 + (maxWidth - tempWidth) + 'px');
        } else {
        jQuery('.flexContainerHeaderFields').css('width', maxWidth + 'px');
        jQuery('.flexContainerHeaderFields').css('left', 105 + 'px');
        }
        }

        //Change 'left' property logo text on pass after resize or delete logo image
        window.onload = ChangeLeftPropertyLogoText();

        jQuery('#divLogoImagePass').bind("DOMSubtreeModified", function () {
        ChangeLeftPropertyLogoText();
        });

        function ChangeLeftPropertyLogoText() {
        var logoImageWidth = jQuery('#divLogoImagePass').width();
        jQuery('#divLogoTextPass').css('left', (logoImageWidth + 8).toString() + 'px');
        ChangWidthFlexContainerHeaderPass();
        }

        //Change width text fields on primary pass area
        function ChangeWidthPrimaryTextFieldPass(someId) {
        var tempId = someId.toString().slice(-1),
        max = 0;
        document.getElementById('divPrimaryLabelPass' + tempId).style.width = 'auto';
        document.getElementById('divPrimaryValuePass' + tempId).style.width = 'auto';
        max = Math.max(document.getElementById('divPrimaryLabelPass' + tempId).offsetWidth, document.getElementById('divPrimaryValuePass' + tempId).offsetWidth);
        if (max > 0) {
        document.getElementById('divPrimaryLabelPass' + tempId).style.width = max + 'px';
        document.getElementById('divPrimaryValuePass' + tempId).style.width = max + 'px';
        }
        }

        //Change width text fields on auxiliary pass area
        function ChangeWidthAuxiliaryTextFieldPass(someId) {
        var tempId = someId.toString().slice(-1),
        max = 0;
        document.getElementById('divAuxiliaryLabelPass' + tempId).style.width = 'auto';
        document.getElementById('divAuxiliaryValuePass' + tempId).style.width = 'auto';
        max = Math.max(document.getElementById('divAuxiliaryLabelPass' + tempId).offsetWidth, document.getElementById('divAuxiliaryValuePass' + tempId).offsetWidth);
        if (max > 0) {
        document.getElementById('divAuxiliaryLabelPass' + tempId).style.width = max + 'px';
        document.getElementById('divAuxiliaryValuePass' + tempId).style.width = max + 'px';
        }
        }

        //Change width text fields on secondary pass area
        function ChangeWidthSecondaryTextFieldPass(someId) {
        var tempId = someId.toString().slice(-1),
        max = 0;
        document.getElementById('divSecondaryLabelPass' + tempId).style.width = 'auto';
        document.getElementById('divSecondaryValuePass' + tempId).style.width = 'auto';
        max = Math.max(document.getElementById('divSecondaryLabelPass' + tempId).offsetWidth, document.getElementById('divSecondaryValuePass' + tempId).offsetWidth);
        if (max > 0) {
        document.getElementById('divSecondaryLabelPass' + tempId).style.width = max + 'px';
        document.getElementById('divSecondaryValuePass' + tempId).style.width = max + 'px';
        }
        }

        //Check and uncheck fieds on front pass
        function CheckAndUncheckFieldFront(id) {
        var tempId = id.replace('checkbox', 'div'),
        number = tempId.slice(-1),
        tempIdLabel = '',
        tempIdValue = '';
        tempIdLabel = tempId.replace(number, 'LabelPass' + number);
        tempIdValue = tempId.replace(number, 'ValuePass' + number);
        if (jQuery('#' + id).prop('checked')) {
        jQuery('#' + tempIdLabel).css('display', 'block');
        jQuery('#' + tempIdValue).css('display', 'block');
        } else {
        jQuery('#' + tempIdLabel).css('display', 'none');
        jQuery('#' + tempIdValue).css('display', 'none');
        }
        }

        ;

        //Check and uncheck fieds on back pass
        function CheckAndUncheckFieldBack(id) {
        var tempId = id.toString().replace('checkbox', 'div'),
        number = tempId.slice(-1);
        tempId = tempId.replace(number, 'FieldContentPass' + number);
        if (jQuery('#' + id).prop('checked')) {
        jQuery('#' + tempId).css('display', 'block');
        } else {
        jQuery('#' + tempId).css('display', 'none');
        }
        }

        //Check checkbox field after input text in front content
        function CheckCheckboxAfterInput(id) {
        var tempId = id.toString().replace('LabelTextInput', '').replace('ValueTextInput', '').replace('LabelCollapseInput', '')
        .replace('input', '').replace('textarea', '').replace('FieldContent', '');
        tempId = tempId.toString().charAt(0).toUpperCase() + tempId.slice(1);
        tempId = 'checkbox' + tempId;
        if (!jQuery('#' + tempId).prop('checked')) {
        jQuery('#' + tempId).attr('checked', 'checked');
        CheckAndUncheckFieldFront(tempId);
        CheckAndUncheckFieldBack(tempId);
        }
        }

        //Display block dynamic radio button prompt
        function DisplayRadioButtonPrompt(id) {
        var idPrompt = id.toString().slice(0, -1);
        document.getElementById(idPrompt + 'Prompt').style.display = 'block';
        }

        //Display none dynamic radio button prompt
        function DisplayNoneRadioButtonPrompt(id) {
        var idPrompt = id.toString().slice(0, -1);
        document.getElementById(idPrompt + 'Prompt').style.display = 'none';
        }


        //Change placeholder text input
        jQuery('input.radioInputFixOrDinamicLabel').change(function () {
        var tempId = jQuery(this).attr('id').slice(0, -1).replace('Radios', 'TextInput'),
        number = jQuery(this).attr('id').slice(-1);

        if (number == '1') {
        jQuery('#' + tempId).attr('placeholder', 'Обязательный');
        } else if (number == '2') {
        jQuery('#' + tempId).attr('placeholder', 'Необязательный');
        }
        });

        jQuery('input.radioInputFixOrDinamicValue').change(function () {
        var tempId = jQuery(this).attr('id').slice(0, -1).replace('Radios', 'TextInput'),
        number = jQuery(this).attr('id').slice(-1);
        if (number == '1') {
        jQuery('#' + tempId).attr('placeholder', 'Обязательное');
        } else if (number == '2') {
        jQuery('#' + tempId).attr('placeholder', 'Необязательное');
        }
        });

        //Display block serial number input on pass settings tab
        function DisplayBlockSerialNumberInput() {
        jQuery('#divSerialNumberSettingsTab').css('display', 'block');
        };

        //Display none serial number input on pass settings tab
        function DisplayNoneSerialNumberInput() {
        jQuery('#divSerialNumberSettingsTab').css('display', 'none');
        };

        //Display none checkbox on collapse area
        function DisplayNoneCollapseCheckbox(name) {
        var tempId = name.toString().replace('optionsRadios', 'divCheckbox');
        jQuery('#' + tempId).css('display', 'none');
        }

        //Display block checkbox on collapse area
        function DisplayBlockCollapseCheckbox(name) {
        var tempId = name.toString().replace('optionsRadios', 'divCheckbox');
        jQuery('#' + tempId).css('display', 'block');
        }

        //Display the desired select list on change data type select in front content tab
        function DisplayBlockDesiredSelect(thisId) {
        var thisValue = jQuery('#' + thisId + ' option:selected').val(),
        numberFormatId = thisId.replace('select', 'divNumberFormat'),
        currencyId = thisId.replace('select', 'divCurrency'),
        dateFormatId = thisId.replace('select', 'divDateFormat');
        jQuery('#' + numberFormatId).css('display', 'none');
        jQuery('#' + currencyId).css('display', 'none');
        jQuery('#' + dateFormatId).css('display', 'none');
        switch (thisValue) {
        case 'number':
        jQuery('#' + numberFormatId).css('display', 'block');
        break;
        case 'currency':
        jQuery('#' + currencyId).css('display', 'block');
        break;
        case 'date':
        jQuery('#' + dateFormatId).css('display', 'block');
        break;
        case 'dateTime':
        jQuery('#' + dateFormatId).css('display', 'block');
        break;
        }
        };

        //Add address field on lock screen
        var GLOBAL_COUNT_ADDRESS_FIELD = 1;
        function AddAddressField() {
        GLOBAL_COUNT_ADDRESS_FIELD++;
        if (GLOBAL_COUNT_ADDRESS_FIELD <= 10) {
        var lastChild = jQuery("#mainCollapsePanelAddressContent").children().last(),
        lastChildId = parseInt(lastChild.attr('id').toString().slice(-2).replace('t', ''), 10),
        content = '',
        replacedHtml = '',
        stringContent = new RegExp('Content' + lastChildId, 'g'),
        stringAddress = new RegExp('Address' + lastChildId, 'g'),
        stringInput = new RegExp('Input' + lastChildId, 'g'),
        stringMap = new RegExp('Map' + lastChildId, 'g'),
        stringLock = new RegExp('Lock' + lastChildId, 'g'),
        stringButton = new RegExp('Button' + lastChildId, 'g');
        jQuery('<div />', {
        id: 'collapsePanelAddressContent' + (lastChildId + 1)
        }).appendTo('#mainCollapsePanelAddressContent');

        //Copy content last field to new field
        content = jQuery('#collapsePanelAddressContent' + lastChildId).html();
        jQuery('#collapsePanelAddressContent' + (lastChildId + 1)).html(content);

        //Change attributes in new field
        replacedHtml = jQuery('#collapsePanelAddressContent' + (lastChildId + 1)).html().replace(stringContent, 'Content' + (lastChildId + 1))
        .replace(stringAddress, 'Address' + (lastChildId + 1)).replace(stringInput, 'Input' + (lastChildId + 1)).replace(stringMap, 'Map' + (lastChildId + 1))
        .replace(stringLock, 'Lock' + (lastChildId + 1)).replace(stringButton, 'Button' + (lastChildId + 1));
        jQuery('#collapsePanelAddressContent' + (lastChildId + 1)).html(replacedHtml);
        }
        jQuery("[data-toggle='tooltip']").tooltip();
        };

        //Add Language input text row on languages tab
        function AddLanguageTextRow(thisId) {
        var tempId = parseInt(thisId.slice(-3).replace('n', '').replace('o', ''), 10),
        lastChild = jQuery('#divLanguageTextInputs' + tempId).children().last(),
        lastChildId = parseInt(lastChild.attr('id').toString().slice(-2).replace('w', ''), 10),
        content = '',
        replacedHtml = '',
        stringOriginal = new RegExp('Original' + lastChildId, 'g'),
        stringLocal = new RegExp('Local' + lastChildId, 'g');
        jQuery('<div />', {
        id: 'divTextInputsLanguage' + tempId + 'Row' + (lastChildId + 1)
        }).appendTo('#divLanguageTextInputs' + tempId);

        //Copy content last field to new field
        content = jQuery('#divTextInputsLanguage' + tempId + 'Row' + lastChildId).html();
        jQuery('#divTextInputsLanguage' + tempId + 'Row' + (lastChildId + 1)).html(content);

        //Change attributes in new field
        replacedHtml = jQuery('#divTextInputsLanguage' + tempId + 'Row' + (lastChildId + 1)).html().replace(stringOriginal, 'Original' + (lastChildId + 1))
        .replace(stringLocal, 'Local' + (lastChildId + 1));
        jQuery('#divTextInputsLanguage' + tempId + 'Row' + (lastChildId + 1)).html(replacedHtml);
        }

        //Add language field on language tab
        function AddLanguageField() {
        var lastChild = jQuery('#mainCollapsePanelLanguageContent').children().last(),
        lastChildId = parseInt(lastChild.attr('id').toString().slice(-2).replace('t', ''), 10),
        content = '',
        replacedHtml = '',
        stringContent = new RegExp('Content' + lastChildId, 'g'),
        stringLanguage = new RegExp('Language' + lastChildId, 'g'),
        stringInputs = new RegExp('Inputs' + lastChildId, 'g'),
        stringButton = new RegExp('Button' + lastChildId, 'g');
        jQuery('<div />', {
        id: 'collapsePanelLanguageContent' + (lastChildId + 1)
        }).appendTo('#mainCollapsePanelLanguageContent');

        //Copy last field content to new field
        content = jQuery('#collapsePanelLanguageContent' + lastChildId).html();
        jQuery('#collapsePanelLanguageContent' + (lastChildId + 1)).html(content);

        //Change attributes in new field
        replacedHtml = jQuery('#collapsePanelLanguageContent' + lastChildId).html().replace(stringContent, 'Content' + (lastChildId + 1))
        .replace(stringLanguage, 'Language' + (lastChildId + 1)).replace(stringInputs, 'Inputs' + (lastChildId + 1)).replace(stringButton, 'Button' + (lastChildId + 1));
        jQuery('#collapsePanelLanguageContent' + (lastChildId + 1)).html(replacedHtml);
        }

        //Display block or none distribution quantity input on distribution tab
        function DisplayDistQuantityInput(tempValue) {
        switch (tempValue) {
        case '0':
        jQuery('#divDistQuantityInput').css('display', 'none');
        break;
        case '1':
        jQuery('#divDistQuantityInput').css('display', 'block');
        break;
        }
        }

        //Display block or none distribution date restriction input on distribution tab
        function DisplayDistDateRestrInput(tempValue) {
        switch (tempValue) {
        case '0':
        jQuery('#divDistDateRestrInput').css('display', 'none');
        break;
        case '1':
        jQuery('#divDistDateRestrInput').css('display', 'block');
        break;
        }
        }

        //Display block or none distribution issue password input on distribution tab
        function DisplayDistIssuePasswdInput(tempValue) {
        switch (tempValue) {
        case '0':
        jQuery('#divDistIssuePasswdInput').css('display', 'none');
        break;
        case '1':
        jQuery('#divDistIssuePasswdInput').css('display', 'block');
        break;
        case '2':
        jQuery('#divDistIssuePasswdInput').css('display', 'none');
        break;
        }
        }

        //Display block or none distribution update password input on distribution tab
        function DisplayDistUpdatePasswdInput(tempValue) {
        switch (tempValue) {
        case '0':
        jQuery('#divDistUpdatePasswdInput').css('display', 'none');
        break;
        case '1':
        jQuery('#divDistUpdatePasswdInput').css('display', 'block');
        break;
        }
        }

        //Display block or none barcode message textarea on front content tab
        function DisplayBarcodeMessTextarea(tempValue) {
        switch (tempValue) {
        case 'encodeThePassSerialNumber':
        jQuery('#divBarcodeMessageTextarea').css('display', 'none');
        break;
        case 'encodeThePassUniqueId':
        jQuery('#divBarcodeMessageTextarea').css('display', 'none');
        break;
        case 'encodeTheUrlToUpdateThePass':
        jQuery('#divBarcodeMessageTextarea').css('display', 'none');
        break;
        case 'provideWhenPassIsCreated':
        jQuery('#divBarcodeMessageTextarea').css('display', 'none');
        break;
        case 'encodeTheSameMessageOnEachPass':
        jQuery('#divBarcodeMessageTextarea').css('display', 'block');
        break;
        }
        }

        //Display block or none barcode alternative text input on front content tab
        function DisplayBarcodeAltText(tempValue) {
        switch (tempValue) {
        case '0':
        jQuery('#divAlternativeTextInput').css('display', 'none');
        break;
        case 'displayThePassSerialNumber':
        jQuery('#divAlternativeTextInput').css('display', 'none');
        break;
        case 'displayThePassUniqueId':
        jQuery('#divAlternativeTextInput').css('display', 'none');
        break;
        case 'provideWhenPassIsCreated':
        jQuery('#divAlternativeTextInput').css('display', 'none');
        break;
        case 'displayTheSameMessageOnEachPass':
        jQuery('#divAlternativeTextInput').css('display', 'block');
        break;
        case 'doNotDisplayAnyAlternativeText':
        jQuery('#divAlternativeTextInput').css('display', 'none');
        break;
        }
        }

        //Display desired transit icon on pass
        function displayTransitIcon(tempValue) {
        jQuery('.transitIconPass').css('display', 'none');
        jQuery('#' + tempValue + 'IconPass').css('display', 'block');
        };


        //Google map on lock screen tab
        var geocoder;
        var MAP = [];
        var markersArray = [];
        MARKER_ARR = [];
        var LATITUDE = 53.9;
        var LONGITUDE = 27.56666670000004;
        var TEMP_LAT;
        var TEMP_LNG;
        MAP.length = 10;
        MARKER_ARR.length = 10;

        //Initialization, create google map
        function initialize(tempId) {
        var idNumber = tempId.slice(-2).replace('s', '');
        if (!MAP.hasOwnProperty(idNumber - 1)) {
        tempId = tempId.replace('pButtonAddress', 'gMap');
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(LATITUDE, LONGITUDE);
        var mapOptions = {
        zoom: 11,
        center: latlng
        };
        var map = new google.maps.Map(document.getElementById(tempId), mapOptions);
        MAP[idNumber - 1] = map;
        google.maps.event.addListener(map, 'click', function (event) {
        placeMarker(event.latLng, tempId);
        });
        } else {
        if (!(MARKER_ARR[idNumber - 1] == null)) {
        markersArray.push(MARKER_ARR[idNumber - 1]);
        var marker = new google.maps.Marker({
        map: MAP[idNumber - 1],
        position: MARKER_ARR[idNumber - 1].position
        });
        markersArray.push(marker);
        }
        }

        }

        //Call find address on map function after click button 'Найти'
        function FindButtonCodeAddress(tempId) {
        var varId = tempId.replace('ButtonFind', 'Input');
        codeAddress(varId);
        }

        //Call find address on map function after click button 'Найти широту и долготу'
        function LatLngButtonCodeAddress(tempId) {
        var varId = tempId.replace('pButtonAddress', 'addressLabelCollapseInput');
        var idNumber = tempId.slice(-2).replace('s', '');
        jQuery('#addressInputLock' + idNumber).val(jQuery('#addressLabelCollapseInput' + idNumber).val());
        if (jQuery('#addressLabelCollapseInput' + idNumber).val() != '') {
        codeAddress(varId);
        }
        }

        //Find address on map
        function codeAddress(tempId) {
        var idNumber = parseInt(tempId.slice(-2).replace('k', '').replace('t', ''), 10);
        var address = document.getElementById(tempId).value;
        geocoder.geocode({ 'address': address }, function (results, status) {
        if (status == google.maps.GeocoderStatus.OK) {
        deleteMapMarkers();
        MAP[idNumber - 1].setCenter(results[0].geometry.location);
        MAP[idNumber - 1].setZoom(17);
        var marker = new google.maps.Marker({
        map: MAP[idNumber - 1],
        position: results[0].geometry.location
        });
        markersArray.push(marker);
        MARKER_ARR[idNumber - 1] = marker;
        tempId = tempId.replace('addressInputLock', 'latLngMapContent').replace('addressLabelCollapseInput', 'latLngMapContent');
        document.getElementById(tempId).innerHTML = marker.position.lat() + '/' + marker.position.lng();
        TEMP_LAT = marker.position.lat();
        TEMP_LNG = marker.position.lng();
        } else {
        alert('Geocode was not successful for the following reason: ' + status);
        }
        });
        }

        //Resize map
        function ResizeMap(tempId) {
        var idNumber = parseInt(tempId.slice(-2).replace('s', ''), 10);
        google.maps.event.trigger(MAP[idNumber - 1], 'resize');
        LatLngButtonCodeAddress(tempId);
        }

        //Place marker on map
        function placeMarker(location, tempId) {
        var idNumber = parseInt(tempId.slice(-2).replace('p', ''), 10);
        deleteMapMarkers();
        var marker = new google.maps.Marker({
        position: location,
        map: MAP[idNumber - 1]
        });
        markersArray.push(marker);
        MARKER_ARR[idNumber - 1] = marker;
        tempId = tempId.replace('gMap', 'latLngMapContent');
        document.getElementById(tempId).innerHTML = location.lat() + '/' + location.lng();
        TEMP_LAT = location.lat();
        TEMP_LNG = location.lng();
        //var infowindow = new google.maps.InfoWindow({
        //    content: 'Latitude: ' + location.lat() + 'Longitude: ' + location.lng()
        //});
        //infowindow.open(map, marker);
        }

        //Delete all markers on map
        function deleteMapMarkers() {
        for (var i = 0; i < markersArray.length; i++) {
        markersArray[i].setMap(null);
        }
        markersArray.length = 0;
        }

        //Apply latitude and longitude button on lock screen tab
        function LatLngApply(tempId) {
        var latInputId,
        lngInputId,
        addressInputId,
        addressInputMapId;
        latInputId = tempId.replace('latLngApplyButton', 'latitudeInput');
        lngInputId = tempId.replace('latLngApplyButton', 'longitudeInput');
        addressInputId = tempId.replace('latLngApplyButton', 'addressLabelCollapseInput');
        addressInputMapId = tempId.replace('latLngApplyButton', 'addressInputLock');
        document.getElementById(latInputId).value = TEMP_LAT;
        document.getElementById(lngInputId).value = TEMP_LNG;
        document.getElementById(addressInputId).value = document.getElementById(addressInputMapId).value;
        DisNoneDarkAreaAndMap();
        }

        //Display none dark area and map on lock screen
        function DisNoneDarkAreaAndMap() {
        jQuery('.gMapLockScreen').css('display', 'none');
        jQuery('#darkAreaLockScreen').css('display', 'none');
        }

        //Display block dark area and map on lock screen
        function DisBlockDarkAreaAndMap(tempId) {
        var idNumber = parseInt(tempId.slice(-2).replace('s', ''), 10);
        jQuery('#divGMap' + idNumber).css('display', 'block');
        jQuery('#darkAreaLockScreen').css('display', 'block');
        }

        //Tooltip bootstrap
        jQuery(function () {
        jQuery("[data-toggle='tooltip']").tooltip();
        });

        jQuery(function () {
        jQuery("[data-toggle='collapse']").collapse();
        });

        //Show date time pickers on distribution tab
        function ShowDateTimePicker(thisId) {
        jQuery('#' + thisId).appendDtpicker({
        'locale': 'ru',
        'todayButton': false,
        'dateFormat': 'DD/MM/YY hh:mm',
        'firstDayOfWeek': 1,
        'closeOnSelected': true
        });
        jQuery('#' + thisId).handleDtpicker('show');
        }

        //Change barcode type function
        jQuery('#divBarcodeFormat input').click(function () {
        switch (jQuery(this).attr('id')) {
        case 'aztecCode':
        jQuery('#tab5').css('top', '358px').css('height', '126px');
        if (jQuery('.passTypeImg.selected').attr('data-pass') == 'generic') {
        jQuery('#auxiliaryAreaPass').css('display', 'none');
        jQuery('#tab3').css('display', 'none');
        }
        break;
        case 'qrCode':
        jQuery('#tab5').css('top', '358px').css('height', '126px');
        if (jQuery('.passTypeImg.selected').attr('data-pass') == 'generic') {
        jQuery('#auxiliaryAreaPass').css('display', 'none');
        jQuery('#tab3').css('display', 'none');
        }
        break;
        case 'pdf417Code':
        jQuery('#tab5').css('top', '377px').css('height', '102px');
        if (jQuery('.passTypeImg.selected').attr('data-pass') == 'generic') {
        jQuery('#auxiliaryAreaPass').css('display', 'block');
        jQuery('#tab3').css('display', 'block');
        }
        break;
        }
        if (jQuery('.passTypeImg.selected').attr('data-pass') == 'eventTicket' && jQuery('#eventTicketType input:checked').attr('value') == 'option2') {
        ChangesDependingPassType('eventTicket');
        };
        });

        //Check and uncheck pass type radio button (images)
        jQuery('.passTypeImg').click(function () {
        var attrValue;
        jQuery('.passTypeImg, selected').removeClass('selected');
        jQuery(this).addClass('selected');
        attrValue = jQuery(this).attr('data-pass');
        jQuery('#divPassType input[checked = "checked"]').removeAttr('checked');
        jQuery('#divPassType input[value = "' + attrValue + '"]').attr('checked', 'checked');
        ChangesDependingPassType(attrValue);
        });

        //Change event ticket type radio button
        jQuery('input[name=optionsEventTicketType]:radio').change(function () {
        ChangesDependingPassType('eventTicket');
        });

        //Change the settings depending on the pass type
        function ChangesDependingPassType(passType) {
        switch (passType) {
        case 'boardingPass':

        //Images
        jQuery('#divStripImage').css('display', 'none');
        jQuery('#divStripImagePass').css('display', 'none');
        jQuery('#divBackgroundImage').css('display', 'none');
        jQuery('#backgroundCanvas').css('display', 'none');
        jQuery('#divThumbnailImage').css('display', 'none');
        jQuery('#divThumbnailImagePass').css('display', 'none');

        //Auxiliary
        jQuery('#divAuxiliaryLabelPass4').css('display', 'block');
        jQuery('#divAuxiliaryLabelPass5').css('display', 'block');
        jQuery('#divAuxiliaryValuePass4').css('display', 'block');
        jQuery('#divAuxiliaryValuePass5').css('display', 'block');
        jQuery('#flexContainerAuxiliaryLabels').css('top', '105px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '121px');
        jQuery('#collapsePanelAuxiliaryContent4').css('display', 'block');
        jQuery('#collapsePanelAuxiliaryContent5').css('display', 'block');
        jQuery('#auxiliaryAreaPass').css('display', 'block');
        jQuery('#tab3').css('display', 'block').css('height', '40px').css('top', '247px');

        //Primary
        jQuery('#collapsePanelPrimaryContent2').css('display', 'block');
        jQuery('#divPrimaryValuePass2').css('display', 'block');
        jQuery('#divPrimaryLabelPass2').css('display', 'block').removeClass('valueText').removeClass('labelText').addClass('labelText');
        jQuery('#divPrimaryLabelPass2').css('color', jQuery('#labelColorPicker').val());
        jQuery('#divPrimaryValuePass1').css('font-size', '25px');
        jQuery('#divPrimaryLabelPass1').css('font-size', '10px').css('display', 'block').removeClass('valueText').removeClass('labelText').addClass('labelText');
        jQuery('#divPrimaryLabelPass1').css('color', jQuery('#labelColorPicker').val());
        jQuery('#divPrimaryLabelText1').css('display', 'block');
        jQuery('#flexContainerPrimaryValues').css('top', '66px').css('height', '40px').css('width', '257px');
        jQuery('#flexContainerPrimaryLabels').css('top', '55px').css('height', '13px').css('width', '257px');
        jQuery('#tab2').css('height', '40px').css('top', '202px');
            jQuery('#transitIconsBlock').css('display', 'block');

        //Secondary
        jQuery('#secondaryAreaPass').css('display', 'block');
        jQuery('#flexContainerSecondaryLabels').css('top', '152px');
        jQuery('#flexContainerSecondaryValues').css('top', '165px');
        jQuery('.flexContainerSecondaryFields').css('width', '257px');
        jQuery('#collapsePanelSecondaryContent3').css('display', 'block');
        jQuery('#collapsePanelSecondaryContent4').css('display', 'block');
        jQuery('#tab4').css('display', 'block').css('top', '293px').css('height', '40px');

        //Others
        jQuery('#divGroupingIdentifier').css('display', 'block');
        jQuery('#divEventTicketTypeRadio').css('display', 'none');
        break;
        case 'coupon':

        //Images
        jQuery('#divStripImage').css('display', 'block');
        jQuery('#divStripImagePass').css('display', 'block');
        jQuery('#divBackgroundImage').css('display', 'none');
        jQuery('#backgroundCanvas').css('display', 'none');
        jQuery('#divThumbnailImage').css('display', 'none');
        jQuery('#divThumbnailImagePass').css('display', 'none');
        jQuery('.divStripImagePass').css('max-height', '106px');

        //Auxiliary
        jQuery('#divAuxiliaryLabelPass4').css('display', 'none');
        jQuery('#divAuxiliaryLabelPass5').css('display', 'none');
        jQuery('#divAuxiliaryValuePass4').css('display', 'none');
        jQuery('#divAuxiliaryValuePass5').css('display', 'none');
        jQuery('#flexContainerAuxiliaryLabels').css('top', '168px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '181px');
        jQuery('#collapsePanelAuxiliaryContent4').css('display', 'none');
        jQuery('#collapsePanelAuxiliaryContent5').css('display', 'none');
        jQuery('#auxiliaryAreaPass').css('display', 'block');
        jQuery('#tab3').css('display', 'block').css('height', '43px').css('top', '309px');

        //Primary
        jQuery('#collapsePanelPrimaryContent2').css('display', 'none');
        jQuery('#divPrimaryValuePass2').css('display', 'none');
        jQuery('#divPrimaryLabelPass2').css('display', 'none').removeClass('valueText').removeClass('labelText').addClass('valueText');
        jQuery('#divPrimaryValuePass1').css('font-size', '58px');
        jQuery('#divPrimaryLabelPass1').css('font-size', '14px').css('display', 'block').removeClass('valueText').removeClass('labelText').addClass('valueText');
        jQuery('#divPrimaryLabelPass1').css('color', jQuery('#textColorPicker').val());
        jQuery('#divPrimaryLabelText1').css('display', 'block');
        jQuery('#flexContainerPrimaryValues').css('top', '48px').css('height', '70px').css('width', '257px');
        jQuery('#flexContainerPrimaryLabels').css('top', '122px').css('height', '36px').css('width', '257px');
        jQuery('#tab2').css('height', '94px').css('top', '202px');
        jQuery('#transitIconsBlock').css('display', 'none');

        //Secondary
        jQuery('#secondaryAreaPass').css('display', 'none');
        jQuery('#tab4').css('display', 'none').css('top', '309px').css('height', '43px');

        //Others
        jQuery('#divGroupingIdentifier').css('display', 'none');
        jQuery('#divEventTicketTypeRadio').css('display', 'none');
        break;
        case 'storeCard':

        //Images
        jQuery('#divStripImage').css('display', 'block');
        jQuery('#divStripImagePass').css('display', 'block');
        jQuery('#divBackgroundImage').css('display', 'none');
        jQuery('#backgroundCanvas').css('display', 'none');
        jQuery('#divThumbnailImage').css('display', 'none');
        jQuery('#divThumbnailImagePass').css('display', 'none');
        jQuery('.divStripImagePass').css('max-height', '106px');

        //Auxiliary
        jQuery('#divAuxiliaryLabelPass4').css('display', 'none');
        jQuery('#divAuxiliaryLabelPass5').css('display', 'none');
        jQuery('#divAuxiliaryValuePass4').css('display', 'none');
        jQuery('#divAuxiliaryValuePass5').css('display', 'none');
        jQuery('#flexContainerAuxiliaryLabels').css('top', '168px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '181px');
        jQuery('#collapsePanelAuxiliaryContent4').css('display', 'none');
        jQuery('#collapsePanelAuxiliaryContent5').css('display', 'none');
        jQuery('#auxiliaryAreaPass').css('display', 'block');
        jQuery('#tab3').css('display', 'block').css('height', '43px').css('top', '309px');

        //Primary
        jQuery('#collapsePanelPrimaryContent2').css('display', 'none');
        jQuery('#divPrimaryValuePass2').css('display', 'none');
        jQuery('#divPrimaryLabelPass2').css('display', 'none').removeClass('valueText').removeClass('labelText').addClass('valueText');
        jQuery('#divPrimaryValuePass1').css('font-size', '58px');
        jQuery('#divPrimaryLabelPass1').css('font-size', '14px').css('display', 'block').removeClass('valueText').removeClass('labelText').addClass('valueText');
        jQuery('#divPrimaryLabelPass1').css('color', jQuery('#textColorPicker').val());
        jQuery('#divPrimaryLabelText1').css('display', 'block');
        jQuery('#flexContainerPrimaryValues').css('top', '48px').css('height', '70px').css('width', '257px');
        jQuery('#flexContainerPrimaryLabels').css('top', '122px').css('height', '36px').css('width', '257px');
        jQuery('#tab2').css('height', '94px').css('top', '202px');
        jQuery('#transitIconsBlock').css('display', 'none');

        //Secondary
        jQuery('#secondaryAreaPass').css('display', 'none');
        jQuery('#tab4').css('display', 'none').css('top', '309px').css('height', '43px');

        //Others
        jQuery('#divGroupingIdentifier').css('display', 'none');
        jQuery('#divEventTicketTypeRadio').css('display', 'none');
        break;
        case 'generic':

        //Images
        jQuery('#divStripImage').css('display', 'none');
        jQuery('#divStripImagePass').css('display', 'none');
        jQuery('#divBackgroundImage').css('display', 'none');
        jQuery('#backgroundCanvas').css('display', 'none');
        jQuery('#divThumbnailImage').css('display', 'block');
        jQuery('#divThumbnailImagePass').css('display', 'block');
        jQuery('#thumbnailImagePass').removeClass('eventTicket').addClass('generic');

        //Auxiliary
        jQuery('#divAuxiliaryLabelPass4').css('display', 'block');
        jQuery('#divAuxiliaryLabelPass5').css('display', 'none');
        jQuery('#divAuxiliaryValuePass4').css('display', 'block');
        jQuery('#divAuxiliaryValuePass5').css('display', 'none');
        jQuery('#flexContainerAuxiliaryLabels').css('top', '195px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '210px');
        jQuery('#collapsePanelAuxiliaryContent4').css('display', 'block');
        jQuery('#collapsePanelAuxiliaryContent5').css('display', 'none');
        jQuery('#tab3').css('height', '36px').css('top', '337px');
        if (!(jQuery('#divBarcodeFormat input.active').attr('id') == 'pdf417Code')) {
        jQuery('#auxiliaryAreaPass').css('display', 'none');
        jQuery('#tab3').css('display', 'none');
        };

        //Primary
        jQuery('#collapsePanelPrimaryContent2').css('display', 'none');
        jQuery('#divPrimaryValuePass2').css('display', 'none');
        jQuery('#divPrimaryLabelPass2').css('display', 'none').removeClass('valueText').removeClass('labelText').addClass('labelText');
        jQuery('#divPrimaryValuePass1').css('font-size', '16px');
        jQuery('#divPrimaryLabelPass1').css('font-size', '10px').css('display', 'block').removeClass('valueText').removeClass('labelText').addClass('labelText');
        jQuery('#divPrimaryLabelPass1').css('color', jQuery('#labelColorPicker').val());
        jQuery('#divPrimaryLabelText1').css('display', 'block');
        jQuery('#flexContainerPrimaryValues').css('top', '77px').css('height', '40px').css('width', '168px');
        jQuery('#flexContainerPrimaryLabels').css('top', '66px').css('height', '13px').css('width', '168px');
        jQuery('#tab2').css('height', '49px').css('top', '207px');
        jQuery('#transitIconsBlock').css('display', 'none');

        //Secondary
        jQuery('#secondaryAreaPass').css('display', 'block');
        jQuery('#flexContainerSecondaryLabels').css('top', '152px');
        jQuery('#flexContainerSecondaryValues').css('top', '165px');
        jQuery('.flexContainerSecondaryFields').css('width', '257px');
        jQuery('#collapsePanelSecondaryContent3').css('display', 'none');
        jQuery('#collapsePanelSecondaryContent4').css('display', 'none');
        jQuery('#tab4').css('display', 'block').css('top', '293px').css('height', '40px');

        //Others
        jQuery('#divGroupingIdentifier').css('display', 'none');
        jQuery('#divEventTicketTypeRadio').css('display', 'none');
        break;
        case 'eventTicket':
        if (jQuery('#eventTicketType input:checked').attr('value') == 'option1') {

        //Images
        jQuery('#divStripImage').css('display', 'none');
        jQuery('#divStripImagePass').css('display', 'none');
        jQuery('#divBackgroundImage').css('display', 'block');
        jQuery('#backgroundCanvas').css('display', 'block');
        jQuery('#divThumbnailImage').css('display', 'block');
        jQuery('#divThumbnailImagePass').css('display', 'block');
        jQuery('#thumbnailImagePass').removeClass('generic').addClass('eventTicket');

        //Auxiliary
        jQuery('#divAuxiliaryLabelPass4').css('display', 'block');
        jQuery('#divAuxiliaryLabelPass5').css('display', 'none');
        jQuery('#divAuxiliaryValuePass4').css('display', 'block');
        jQuery('#divAuxiliaryValuePass5').css('display', 'none');
        jQuery('#flexContainerAuxiliaryLabels').css('top', '144px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '160px');
        jQuery('#collapsePanelAuxiliaryContent4').css('display', 'block');
        jQuery('#collapsePanelAuxiliaryContent5').css('display', 'none');
        jQuery('#auxiliaryAreaPass').css('display', 'block');
        jQuery('#tab3').css('display', 'block').css('height', '40px').css('top', '286px');

        //Primary
        jQuery('#collapsePanelPrimaryContent2').css('display', 'none');
        jQuery('#divPrimaryValuePass2').css('display', 'none');
        jQuery('#divPrimaryLabelPass2').css('display', 'none').removeClass('valueText').removeClass('labelText').addClass('labelText');
        jQuery('#divPrimaryValuePass1').css('font-size', '16px');
        jQuery('#divPrimaryLabelPass1').css('font-size', '10px').css('display', 'block').removeClass('valueText').removeClass('labelText').addClass('labelText');
        jQuery('#divPrimaryLabelPass1').css('color', jQuery('#labelColorPicker').val());
        jQuery('#divPrimaryLabelText1').css('display', 'block');
        jQuery('#flexContainerPrimaryValues').css('top', '66px').css('height', '25px').css('width', '168px');
        jQuery('#flexContainerPrimaryLabels').css('top', '55px').css('height', '13px').css('width', '168px');
        jQuery('#tab2').css('height', '34px').css('top', '202px');

        //Secondary
        jQuery('#secondaryAreaPass').css('display', 'block');
        jQuery('#flexContainerSecondaryLabels').css('top', '100px');
        jQuery('#flexContainerSecondaryValues').css('top', '114px');
        jQuery('.flexContainerSecondaryFields').css('width', '199px');
        jQuery('#collapsePanelSecondaryContent3').css('display', 'none');
        jQuery('#collapsePanelSecondaryContent4').css('display', 'none');
        jQuery('#tab4').css('display', 'block').css('top', '244px').css('height', '34px');

        //Others
        jQuery('#divGroupingIdentifier').css('display', 'block');
        jQuery('#divEventTicketTypeRadio').css('display', 'block');
        } else if (jQuery('#eventTicketType input:checked').attr('value') == 'option2') {

        //Images
        jQuery('#divStripImage').css('display', 'block');
        jQuery('#divStripImagePass').css('display', 'block');
        jQuery('#divBackgroundImage').css('display', 'none');
        jQuery('#backgroundCanvas').css('display', 'none');
        jQuery('#divThumbnailImage').css('display', 'none');
        jQuery('#divThumbnailImagePass').css('display', 'none');
        jQuery('.divStripImagePass').css('max-height', '74px');

        //Auxiliary
        jQuery('#divAuxiliaryLabelPass4').css('display', 'block');
        jQuery('#divAuxiliaryLabelPass5').css('display', 'none');
        jQuery('#divAuxiliaryValuePass4').css('display', 'block');
        jQuery('#divAuxiliaryValuePass5').css('display', 'none');
        jQuery('#collapsePanelAuxiliaryContent4').css('display', 'block');
        jQuery('#collapsePanelAuxiliaryContent5').css('display', 'none');
        jQuery('#auxiliaryAreaPass').css('display', 'block');
        if (jQuery('#divBarcodeFormat input.active').attr('id') == 'pdf417Code') {
        jQuery('#flexContainerAuxiliaryLabels').css('top', '184px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '200px');
        jQuery('#tab3').css('display', 'block').css('height', '40px').css('top', '325px');
        } else {
        jQuery('#flexContainerAuxiliaryLabels').css('top', '176px');
        jQuery('#flexContainerAuxiliaryValues').css('top', '192px');
        jQuery('#tab3').css('display', 'block').css('height', '35px').css('top', '319px');
        };

        //Primary
        jQuery('#collapsePanelPrimaryContent2').css('display', 'none');
        jQuery('#divPrimaryValuePass2').css('display', 'none');
        jQuery('#divPrimaryLabelPass2').css('display', 'none');
        jQuery('#divPrimaryValuePass1').css('font-size', '57px');
        jQuery('#divPrimaryLabelPass1').css('display', 'none');
        jQuery('#divPrimaryLabelPass1').css('color', jQuery('#labelColorPicker').val());
        jQuery('#divPrimaryLabelText1').css('display', 'none');
        jQuery('#flexContainerPrimaryValues').css('top', '49px').css('height', '65px').css('width', '257px');
        jQuery('#tab2').css('height', '64px').css('top', '202px');
        jQuery('#transitIconsBlock').css('display', 'none');

        //Secondary
        jQuery('#secondaryAreaPass').css('display', 'block');
        jQuery('.flexContainerSecondaryFields').css('width', '199px');
        jQuery('#collapsePanelSecondaryContent3').css('display', 'block');
        jQuery('#collapsePanelSecondaryContent4').css('display', 'none');
        if (jQuery('#divBarcodeFormat input.active').attr('id') == 'pdf417Code') {
        jQuery('#flexContainerSecondaryLabels').css('top', '135px');
        jQuery('#flexContainerSecondaryValues').css('top', '149px');
        jQuery('#tab4').css('display', 'block').css('top', '277px').css('height', '40px');
        } else {
        jQuery('#flexContainerSecondaryLabels').css('top', '130px');
        jQuery('#flexContainerSecondaryValues').css('top', '144px');
        jQuery('#tab4').css('display', 'block').css('top', '274px').css('height', '35px');
        };

        //Others
        jQuery('#divGroupingIdentifier').css('display', 'block');
        jQuery('#divEventTicketTypeRadio').css('display', 'block');
        }
        break;
        }
        }

        ////Hex to rgb conversion
        //function HexToRgb(hex) {
        //    var result = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(hex);
        //    return 'rgb(' + parseInt(result[1], 16) + ', ' + parseInt(result[2], 16) + ', ' + parseInt(result[3], 16) + ')';
        //}

        //JSON serialization
        function PostJsonData() {
        var jsonObj = {
        LocationDetails: {
        Locations: []
        },
        DistributionDetails: {},
        BarcodeDetails: {},
        FieldDetails: {
        AuxiliaryFields: [],
        BackFields: [],
        HeaderFields: [],
        PrimaryFields: [],
        SecondaryFields: []
        }
        },
        fieldsName = [
        {'fieldName':'auxiliary', 'FieldName': 'Auxiliary', 'fieldCount': 5, 'arrName': jsonObj.FieldDetails.AuxiliaryFields},
        {'fieldName':'back', 'FieldName': 'Back', 'fieldCount': jQuery('#mainCollapsePanelBackContent').children().length, 'arrName': jsonObj.FieldDetails.BackFields},
        {'fieldName':'header', 'FieldName': 'Header', 'fieldCount': 3, 'arrName': jsonObj.FieldDetails.HeaderFields},
        {'fieldName':'primary', 'FieldName': 'Primary', 'fieldCount': 2, 'arrName': jsonObj.FieldDetails.PrimaryFields},
        {'fieldName':'secondary', 'FieldName': 'Secondary', 'fieldCount': 4, 'arrName': jsonObj.FieldDetails.SecondaryFields}
        ];

        //Standard Keys
        jsonObj.OrganizationName = jQuery('#organizationNameInput').val();
        jsonObj.TemplateName = jQuery('#templateNameInput').val();
        //jsonObj.TemplateDescription = ?????????????????????????
        jsonObj.PassStyle = jQuery('#divPassType input[checked = "checked"]').val();
        jsonObj.PassDescription = jQuery('#passDescriptionTextarea').val();
        jsonObj.PassSerialNumberType = jQuery('#serialNumber input:checked').val();
        //if (jQuery('#serialNumber input:checked').attr('value') == 'option3') {
        //    jsonObj.serialNumber = jQuery('#serialNumberInput').val();
        //}
        jsonObj.PassCertificate = jQuery('#passCertificSelect option:selected').val();
        //jsonObj.TeamIdentifier = ??????????????????????????

        //Visual Appearance Keys
        jsonObj.BackgroundColor = jQuery('#backColorPicker').val();
        jsonObj.LabelTextColor = jQuery('#labelColorPicker').val();
        jsonObj.ValueTextColor = jQuery('#textColorPicker').val();
        //jsonObj.SuppressStripShine = ????????????????????????????(only before IOS7)

        //IOS 7
        //WARNING! Optional for event tickets and boarding passes; otherwise not allowed
        jsonObj.GroupingIdentifier = jQuery('#groupingIdentifierInput').val();
        jsonObj.PassTimezone = jQuery('#passTz').val();//invalid value
        jsonObj.LogoText = jQuery('#logoTextInput').val();

        //Integration Details
        //jsonObj.IntegrationDetails = ?????????????????????


        //Location Details
        jsonObj.LocationDetails.MaxDistance = jQuery('#maxDistanceInput').val();
        for (var i = 0; i < jQuery('#mainCollapsePanelAddressContent').children().length; i++) {
        jsonObj.LocationDetails.Locations.push( {
        'Altitude': jQuery('#altitudeInput' + (i + 1)).val().replace('.',','),
        'Latitude': jQuery('#latitudeInput' + (i + 1)).val().replace('.',','),
        'Longitude': jQuery('#longitudeInput' + (i + 1)).val().replace('.',','),
        'RelevantText': jQuery('#notificationInputAddress' + (i + 1)).val()
        });
        };//no deserialize

        //Beacon Details
        //jsonObj.BeaconDetails = ?????????????????????

        //Distribution Details
        jsonObj.DistributionDetails.PassLinkType = jQuery('#distTypeSelect option:selected').val();
        //jsonObj.DistributionDetails.LimitPassPerUser = ???????????
        jsonObj.DistributionDetails.AllPassesAsExpired = jQuery('#voidedCheckbox').is(':checked');
        jsonObj.DistributionDetails.ExpirationDate = jQuery('#autoExpireInput').val();
        if (jQuery('#distQuantitySelect :selected').val() == 1) {
        jsonObj.DistributionDetails.QuantityRestriction = jQuery('#distQuantityInput').val();
        }
        if (jQuery('#distDateRestrSelect :selected').val() == 1) {
        jsonObj.DistributionDetails.DateRestriction = jQuery('#distDateRestrInput').val();
        }
        if (jQuery('#distPasswdSelect :selected').val() == 1) {
        jsonObj.DistributionDetails.PasswordToIssue = jQuery('#distIssuePasswdInput').val();
        }
        if (jQuery('#distPasswdUpdSelect :selected').val() == 1) {
        jsonObj.DistributionDetails.PasswordToUpdate = jQuery('#distUpdatePasswdInput').val();
        }

        //Barcode Details
        jsonObj.BarcodeDetails.BarcodeType = jQuery('#divBarcodeFormat input.active').attr('id');//не хватает одного пункта
        jsonObj.BarcodeDetails.EncodedMessage = jQuery('#barcodeMessageSelect option:selected').val();
        jsonObj.BarcodeDetails.TextToEncode = jQuery('#barcodeMessageTextarea').val();
        jsonObj.BarcodeDetails.AlternativeText = jQuery('#barcodeAltTextSelect option:selected').val();
        jsonObj.BarcodeDetails.TextToDisplay = jQuery('#alternativeTextInput').val();
        //jsonObj.BarcodeDetails.EncodingFormat = ???????????????????

        //Field Details
        for (var j = 0; j < fieldsName.length; j++) {
        for (var a = 0; a < fieldsName[j].fieldCount; a++) {
        fieldsName[j].arrName.push({
        'IsMarkedField': jQuery('#checkbox' + fieldsName[j].FieldName + (a + 1)).is(':checked'),

        //Standard Field Dictionary Keys
        //'attributedValue': ????????,
        'ChangeMessage': jQuery('#notificationInput' + fieldsName[j].FieldName + (a + 1)).val(),
        //'dataDetectorTypes': чекбоксы
        'Key': jQuery('#' + fieldsName[j].fieldName + 'LabelCollapseInput' + (a + 1)).val(),
        'Label': jQuery('#' + fieldsName[j].fieldName + 'LabelTextInput' + (a + 1)).val(),
        'IsDynamicLabel': jQuery('#' + fieldsName[j].fieldName + 'LabelRadios' + (a + 1) + '2').is(':checked'),
        'Value': jQuery('#' + fieldsName[j].fieldName + 'ValueTextInput' + (a + 1)).val(),
        'IsDynamicValue': jQuery('#' + fieldsName[j].fieldName + 'ValueRadios' + (a + 1) + '2').is(':checked'),
        //'textAlignment': ????????
        'Type': jQuery('#selectDataType' + fieldsName[j].FieldName + (a + 1) +' option:selected').val(),

        //Number Style Keys
        'NumberStyle': jQuery('#selectNumbStyleType' + fieldsName[j].FieldName + (a + 1) +' option:selected').val(),
        'CurrencyCode': jQuery('#currencyCodeSelect' + fieldsName[j].FieldName + (a + 1)).val(),

        //Date Style Keys
        'DateStyle': jQuery('#selectDateStyleType' + fieldsName[j].FieldName + (a + 1) +' option:selected').val(),//without none value
        'IgnoresTimeZone': jQuery('#checkboxIgnoreData' + fieldsName[j].FieldName + (a + 1)).attr('checked') == 'checked',
        'IsRelative': jQuery('#checkboxRelativeData' + fieldsName[j].FieldName + (a + 1)).attr('checked') == 'checked'

        //'timeStyle': чекбокс??????
        });
        }
        }

        jQuery.ajax({
        type: "POST",
        url: "/Home/GiveMeJson",
        data: JSON.stringify(jsonObj),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        });
        alert(JSON.stringify(jsonObj));
        }


        //jQuery('#divGMap1').bind('style', function () {
        //    debugger;
        //    jQuery('#darkAreaLockScreen').css('display', 'block');
        //});
    </script>
    <br />
    <br />
    <br />
