@model PassContentTemplateFieldViewModel
    
<script type="text/javascript">
    function OnPassProjectFieldChange(e) {
        var $divParent = $("#divPassContentTemplateField");
        var fieldId = e.sender.value();
        if (fieldId) {
            $.get("@(Url.Action<PassProjectFieldController>(a => a.Get(0)))/" + fieldId, function(data) {
                    if (data.Success != null) {
                        if (data.Success) {
                            $("#DefaultLabel", $divParent).val(data.Data.DefaultLabel);
                            $("#DefaultValue", $divParent).val(data.Data.DefaultValue);

                            $("#divProjectFieldPrms", $divParent).show();
                            $("#divStaticFieldPrms", $divParent).hide();
                        } else
                            alert(data.Message);
                    }
                })
                .fail(function() {
                    alert("An error occurred");
                });
        } else {
            $("#Label", $divParent).val(null);
            $("#Value", $divParent).val(null);

            $("#divProjectFieldPrms", $divParent).hide();
            $("#divStaticFieldPrms", $divParent).show();
        }
            
    }
</script>

<div id="divPassContentTemplateField">
    @Html.HiddenForExt(m => m.PassContentTemplateId)
    @Html.HiddenForExt(m => m.PassContentTemplateFieldId)
    
    @if (Model.IsNew)
    {
        if (Model.PassProjectFields.Any())
        {
            @Html.DropDownListFormForExt(m => m.PassProjectFieldId, Model.PassProjectFields, "Project Field", "- Static Field -", changeHandler: "OnPassProjectFieldChange")
        }

        <div id="divProjectFieldPrms" style="display:@(!Model.IsStatic ? "block" : "none")">
            @Html.TextBlockFormForExt(m => m.DefaultLabel, Resources.DefaultLable)
            @Html.TextBlockFormForExt(m => m.DefaultValue, Resources.DefaultValue)
        </div>
        <div id="divStaticFieldPrms" style="display:@(Model.IsStatic ? "block" : "none")">
            @Html.TextBoxFormForExt(m => m.Label)
            @Html.TextAreaFormForExt(m => m.Value)
        </div>
    }
    else
    {
        if (Model.IsStatic)
        {
            @Html.TextBoxFormForExt(m => m.Label)
            @Html.TextAreaFormForExt(m => m.Value)
        }
        else
        {
            @Html.TextBlockFormForExt(m => m.Name, Resources.Name)
            @Html.TextBlockFormForExt(m => m.Label, Resources.DefaultLable)
            @Html.TextBlockFormForExt(m => m.Value, Resources.DefaultValue)
            @Html.HiddenForExt(m => m.PassProjectFieldId)
        }
    }

    @Html.DropDownListFormForExt(m => m.FieldKind, labelText: Resources.FieldLocation, optionLabel: string.Format("- Select {0} -", Resources.FieldLocation))
    @Html.TextBoxFormForExt(m => m.AttributedValue, "Attributed Value")
    @Html.TextBoxFormForExt(m => m.ChangeMessage, "Change Message")
    @Html.DropDownListFormForExt(m => m.TextAlignment, labelText: "Text Alignment", optionLabel: "- Select Text Alignment -")
</div>